FORMAT: 1A
HOST: https://test.vcv.ai/

# USA project API 1.0

API for usa-web-app.
Api types:
  - retrieve list of entities using filters, pagination, sorting:
    - GET /vacancies
    - GET /voicebots?vacancy_id=1
    - GET /video_interviews?vacancy_id=1
    - GET /responses?status_id=1&stage_id=2
  - create new entities:
    - POST /vacancies ["vacancies":{"name":"Finance Director"},{"name":"Finance Manager"}]
  - update entities:
    - PUT /vacancies ["vacancies":{"name":"Temporary Finance Director"},{"name":"Temporary Finance Manager"}]
  - delete entities
    - DELETE /vacancies {"vacancies":[{"id":"1"},{"id":"2"}]}
  - retrieve one entity by id:
    - GET /vacancies/1
    - GET /voicebots/2
    - GET /responses/1
  - create new child-relations for parent entity
    - POST /voicebots/2/questions {"questions":[{"body":"How are you?","priority":10},{"body":"Where are you from?","priority":20}]}
  - update child-relations for parent entity
    - PUT /voicebots/2/questions {"questions":[{"id":"1","priority":20},{"id":"2","body":"Where are you?","priority":10}]}
  - delete child-relations for parent entity
    - DELETE /voicebots/2/questions {"questions":[{"id":"1"},{"id":"2"}]}


## Response refuse email default [/api/1.0/responses/{response_id}/email-refuse-default]

+ Parameters
    + response_id (required, string, `1`) ... Response id

### Send default refuse email  [POST]

+ Request (application/json)

+ Response 200 (application/json)

        {
          "templates": [
            {
              "template_text": " Hello, Анна! \n We are glad to invite you for an interview in the company British American Tobacco Russia for a \"Intern in marketing\" position!  Interview will take place:  You need to have:  Yours faithfully, Bat Admin  batemail@batemail.com  ",
              "header": "You are invited for an interview in the company British American Tobacco Russia"
            }
          ],
          "meta": {
            "id": "5ab4d49a42e09",
            "error": null,
            "page": 1,
            "total": 1,
            "active_process": null
          }
        }


## Response job interview email [/api/1.0/responses/{response_id}/email-job-interview]

+ Parameters
    + response_id (required, string, `1`) ... Response id

### Retrieve precompiled invite email [GET]

+ Response 200 (application/json)

        {
          "data": [
            {
              "id": 102,
              "template_text": "Hello",
              "header": "You are invited for an interview in the company British American Tobacco Russia"
            }
          ],
          "meta": {
            "id": "5ab4d49a42e09",
            "error": null,
            "page": 1,
            "total": 1,
            "active_process": null
          }
        }

### Send invite email  [POST]

+ Response 200 (application/json)

        {
          "templates": [
            {
              "template_text": " Hello, Анна! \n We are glad to invite you for an interview in the company British American Tobacco Russia for a \"Intern in marketing\" position!  Interview will take place:  You need to have:  Yours faithfully, Bat Admin  batemail@batemail.com  ",
              "header": "You are invited for an interview in the company British American Tobacco Russia"
            }
          ],
          "meta": {
            "id": "5ab4d49a42e09",
            "error": null,
            "page": 1,
            "total": 1,
            "active_process": null
          }
        }

## Response refuse email [/api/1.0/responses/{response_id}/email-refuse]

+ Parameters
    + response_id (required, string, `1`) ... Response id

### Retrieve precompiled refuse email [GET]

+ Response 200 (application/json)

        {
          "data": [
            {
              "id": 301,
              "template_text": "Здравствуйте",
              "header": "Вы приглашены на собеседование в компанию",
              "manual": 0
              "active": 1
            }
          ],
          "meta": {
            "id": "5ab8d43d4c315",
            "error": null,
            "page": 1,
            "total": 1
          }
        }

### Send refuse email  [POST]

+ Request (application/json)

        {
          "templates": [
            {
              "template_text": " Hello, Анна! \n We are glad to invite you for an interview in the company British American Tobacco Russia for a \"Intern in marketing\" position!  Interview will take place:  You need to have:  Yours faithfully, Bat Admin  batemail@batemail.com  ",
              "header": "You are invited for an interview in the company British American Tobacco Russia"
            }
          ],
          "meta": {
            "id": "5ab4d49a42e09",
            "error": null,
            "page": 1,
            "total": 1,
            "active_process": null
          }
        }

+ Response 200 (application/json)

        {
          "templates": [
            {
              "template_text": " Hello, Анна! \n We are glad to invite you for an interview in the company British American Tobacco Russia for a \"Intern in marketing\" position!  Interview will take place:  You need to have:  Yours faithfully, Bat Admin  batemail@batemail.com  ",
              "header": "You are invited for an interview in the company British American Tobacco Russia"
            }
          ],
          "meta": {
            "id": "5ab4d49a42e09",
            "error": null,
            "page": 1,
            "total": 1,
            "active_process": null
          }
        }


## Vacancy job interview email template [/api/1.0/vacancies/{vacancy_id}/email-template-job-interview]

+ Parameters
    + vacancy_id (required, string, `1`) ... Vacancy id

### Retrieve job interview email template [GET]

+ Response 200 (application/json)

        {
          "data": [
            {
              "id": 301,
              "template_text": "Здравствуйте, {{candidate_name}}!\n\nМы рады пригласить вас на собеседование в {{company_name}} на {{vacancy_title}}!\n\nСобеседование пройдёт по адресу:\n\nС собой необходимо иметь:\n\nС уважением,\n{{recruiter_name}} {{recruiter_lastname}}\n{{recruiter_email}}\n{{recruiter_phone}}\n",
              "header": "Вы приглашены на собеседование в компанию {{company_name}}",
              "active": 1
            }
          ],
          "meta": {
            "id": "5ab8d43d4c315",
            "error": null,
            "page": 1,
            "total": 1
          }
        }

### Update job interview email template  [PUT]

+ Request (application/json)

        {
            "templates": [
                {
                    "template_text":"Updated template content",
                    "active": false,
                    "id": 301
                }
            ]
        }

+ Response 200 (application/json)

        {
          "data": [
            {
              "id": 301,
              "template_text": "Здравствуйте, {{candidate_name}}!\n\nМы рады пригласить вас на собеседование в {{company_name}} на {{vacancy_title}}!\n\nСобеседование пройдёт по адресу:\n\nС собой необходимо иметь:\n\nС уважением,\n{{recruiter_name}} {{recruiter_lastname}}\n{{recruiter_email}}\n{{recruiter_phone}}\n",
              "header": "Вы приглашены на собеседование в компанию {{company_name}}",
              "active": 1
            }
          ],
          "meta": {
            "id": "5ab8d43d4c315",
            "error": null,
            "page": 1,
            "total": 1
          }
        }

## Vacancy refuse email template [/api/1.0/vacancies/{vacancy_id}/email-template-refuse]

+ Parameters
    + vacancy_id (required, string, `1`) ... Vacancy id

### Retrieve refuse email template [GET]

+ Response 200 (application/json)

        {
          "data": [
            {
              "id": 301,
              "template_text": "Здравствуйте, {{candidate_name}}!\n\nБлагодарим за отклик!\nК сожалению, мы не можем пригласить вас на следующий этап. В случае, если будут открыты новые вакансии, мы с вами свяжемся.\n\nС уважением,\n{{recruiter_name}} {{recruiter_lastname}}\n{{company_name}}\n",
              "header": "К сожалению, мы не можем вас пригласить на следующий этап",
              "active": 0,
              "manual": 0
            }
          ],
          "meta": {
            "id": "5ab8d3325ee2f",
            "error": null,
            "page": 1,
            "total": 1
          }
        }

### Update refuse email template  [PUT]

+ Request (application/json)

        {
            "templates": [
                {
                    "template_text":"Updated template content",
                    "active": false,
                    "id": 301
                }
            ]
        }

+ Response 200 (application/json)

        {
          "data": [
            {
              "id": 301,
              "template_text": "Здравствуйте, {{candidate_name}}!\n\nБлагодарим за отклик!\nК сожалению, мы не можем пригласить вас на следующий этап. В случае, если будут открыты новые вакансии, мы с вами свяжемся.\n\nС уважением,\n{{recruiter_name}} {{recruiter_lastname}}\n{{company_name}}\n",
              "header": "К сожалению, мы не можем вас пригласить на следующий этап",
              "active": 0,
              "manual": 0
            }
          ],
          "meta": {
            "id": "5ab8d3325ee2f",
            "error": null,
            "page": 1,
            "total": 1
          }
        }


## Vacancy response notification email template [/api/1.0/vacancies/{vacancy_id}/email-template-response-notice]

+ Parameters
    + vacancy_id (required, string, `1`) ... Vacancy id

### Retrieve new response notification email template [GET]

+ Response 200 (application/json)

        {
          "data": [
            {
              "id": 301,
              "template_text": "Здравствуйте, {{recruiter_name}}!\n\nВ системе появился новый отклик:\nКандидат {{candidate_name}} {{candidate_surname}}  на вакансию {{vacancy_title}}.\nПосмотреть отклик можно по ссылке: {{response_link}}.\n\nВ случае возникновения вопросов, вы можете обратиться в службу поддержки:\n{{support_phone}}\n{{support_email}}\n\nС уважением,\nКоманда VCV.\n",
              "header": "Новый отклик кандидата {{candidate_name}} {{candidate_surname}} на вакансию {{vacancy_title}}",
              "active": 1
            }
          ],
          "meta": {
            "id": "5ab8d0615df8a",
            "error": null,
            "page": 1,
            "total": 1
          }
        }

### Update new response notification email template  [PUT]

+ Request (application/json)

        {
            "templates": [
                {
                    "template_text":"Updated template content",
                    "active": false,
                    "id": 301
                }
            ]
        }

+ Response 200 (application/json)

        {
          "data": [
            {
              "id": 301,
              "template_text": "Здравствуйте, {{recruiter_name}}!\n\nВ системе появился новый отклик:\nКандидат {{candidate_name}} {{candidate_surname}}  на вакансию {{vacancy_title}}.\nПосмотреть отклик можно по ссылке: {{response_link}}.\n\nВ случае возникновения вопросов, вы можете обратиться в службу поддержки:\n{{support_phone}}\n{{support_email}}\n\nС уважением,\nКоманда VCV.\n",
              "header": "Новый отклик кандидата {{candidate_name}} {{candidate_surname}} на вакансию {{vacancy_title}}",
              "active": 1
            }
          ],
          "meta": {
            "id": "5ab8d0615df8a",
            "error": null,
            "page": 1,
            "total": 1
          }
        }


## Vacancies [/api/1.0/vacancies{?sort_by,sort_order,count,page,search_term,is_active}]

### Retrieve vacancies [GET]

+ Parameters
    + sort_by (string, `name`) ... Sort name
    + sort_order (string, `asc`) ... Sort direction
    + count (integer, `100`) ... Limit
    + page (integer, `1`) ... Current page number
    + search_term (string, `Fin`) ... Search term
    + is_active (bool) ...  null (default behaviour) - do not apply, true - only active, false - only not active

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "token": "41ea619a",
                    "name": "Finance Director",
                    "description": "Finance Director Vacancy",
                    "video_link": "https://www.youtube.com/embed/6jiNS_4CEug",
                    "is_active": true,
                    "is_published": true,
                    "is_private": false,
                    "is_resume_required": false,
                    "created_at": "2017-06-22T10:15:55+0300",
                    "has_responses": true,
                    "has_invites": true,
                    "response_count": 2,
                    "new_response_number": 1,
                    "expired_at": "2018-09-22T10:15:55+0300",
                    "geo": {
                        "id": "8",
                        "formatted_address": "Beijing, China",
                        "description": "Peking, Beijing, China",
                        "place_id": "ChIJuSwU55ZS8DURiqkPryBWYrk"
                    },
                    "language": {
                        "id": "2",
                        "code": "ru",
                        "name": "Русский"
                    },
                    "modules": [
                        {
                            "name": "voicebot",
                            "label": "Voice bot"
                        },
                        {
                            "name": "video_interview",
                            "label": "Video interview"
                        }
                    ],
                    "meta": {
                        "active_process": "schlum"
                    },
                    "countries": [
                        {"code":"AL","title":"Albania"}
                    ]
                },
                {
                    "id": "2",
                    "token": "51ea619a",
                    "name": "Finance Manager",
                    "description": null,
                    "video_link": null,
                    "is_active": true,
                    "is_published": false,
                    "is_private": false,
                    "is_resume_required": false,
                    "created_at": "2017-06-22T10:15:55+0300",
                    "has_responses": false,
                    "has_invites": false,
                    "response_count": 0,
                    "new_response_number": 1,
                    "expired_at": "2018-09-22T10:15:55+0300",
                    "language": {
                        "id": "2",
                        "code": "ru",
                        "name": "Русский"
                    },
                    "modules": [
                        {
                            "name": "video_interview",
                            "label": "Video interview"
                        }
                    ],
                    "meta": {
                        "active_process": null
                    },
                    "countries": [
                        {"code":"AL","title":"Albania"}
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }

### Create new vacancies [POST]

+ Request (application/json)

        {
            "vacancies": [
                {
                    "name": "Finance Director",
                    "description": "Finance Director Vacancy",
                    "is_published": true,
                    "geo": {
                        "place_id": "ChIJuSwU55ZS8DURiqkPryBWYrk",
                        "description": "Peking, Beijing, China"
                    },
                    "countries": [
                        {"code":"AL","title":"Albania"}
                    ]
                },
                {
                    "name": "Finance Manager",
                    "is_published": false
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "token": "41ea619a",
                        "name": "Finance Director",
                        "description": "Finance Director Vacancy",
                        "video_link": null,
                        "is_active": true,
                        "is_published": true,
                        "is_private": false,
                        "created_at": "2017-06-22T10:15:55+0300",
                        "has_responses": true,
                        "has_invites": true,
                        "language": {
                            "id": "2",
                            "code": "ru",
                            "name": "Русский"
                        },
                        "geo": {
                            "id": "8",
                            "formatted_address": "Beijing, China",
                            "description": "Peking, Beijing, China",
                            "place_id": "ChIJuSwU55ZS8DURiqkPryBWYrk"
                        },                        
                        "modules": [
                            {
                                "name": "voicebot",
                                "label": "Voice bot"
                            },
                            {
                                "name": "video_interview",
                                "label": "Video interview"
                            }
                        ],
                        "countries": [
                            {"code":"AL","title":"Albania"}
                        ]
                    },
                    {
                        "id": "2",
                        "token": "51ea619a",
                        "name": "Finance Manager",
                        "description": null,
                        "video_link": null,
                        "is_active": true,
                        "is_published": false,
                        "is_private": false,
                        "created_at": "2017-06-22T10:15:55+0300",
                        "has_responses": false,
                        "has_invites": false,
                        "language": {
                            "id": "2",
                            "code": "ru",
                            "name": "Русский"
                        },
                        "modules": [
                            {
                                "name": "voicebot",
                                "label": "Voice bot"
                            },
                            {
                                "name": "video_interview",
                                "label": "Video interview"
                            }
                        ],
                        "countries": [
                            {"code":"AL","title":"Albania"}
                        ]
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }

### Update vacancies [PUT]

Sends only modified data. Updates only specified fields. The ID field is required for each vacancy.

+ Request (application/json)

        {
            "vacancies": [
                {
                    "id": "1",
                    "name": "Temporary Finance Director",
                    "description": "Temporary Finance Director Vacancy",
                    "video_link": "https://www.youtube.com/embed/6jiNS_4CEug",
                    "is_published": false,
                    "is_private": true,
                    "is_resume_required": true,
                    "language": {
                        "code": "ru"
                    },
                    "geo": {
                        "place_id": "ChIJuSwU55ZS8DURiqkPryBWYrk",
                        "description": "Peking, Beijing, China"
                    },
                    "countries": [
                        {"code":"AL","title":"Albania"}
                    ]
                },
                {
                    "id": "2",
                    "is_published": true
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "token": "41ea619a",
                        "name": "Temporary Finance Director",
                        "description": "Temporary Finance Director Vacancy",
                        "video_link": "https://www.youtube.com/embed/6jiNS_4CEug",
                        "is_active": true,
                        "is_published": false,
                        "is_private": true,
                        "is_resume_required": true,
                        "created_at": "2017-06-22T10:15:55+0300",
                        "has_responses": true,
                        "has_invites": true,
                        "language": {
                            "id": "2",
                            "code": "ru",
                            "name": "Русский"
                        },
                        "geo": {
                            "id": "8",
                            "formatted_address": "Beijing, China",
                            "description": "Peking, Beijing, China",
                            "place_id": "ChIJuSwU55ZS8DURiqkPryBWYrk"
                        },                          
                        "modules": [
                            {
                                "name": "voicebot",
                                "label": "Voice bot"
                            },
                            {
                                "name": "video_interview",
                                "label": "Video interview"
                            }
                        ],
                        "countries": [
                            {"code":"AL","title":"Albania"}
                        ]
                    },
                    {
                        "id": "2",
                        "token": "51ea619a",
                        "name": "Finance Manager",
                        "description": null,
                        "is_active": true,
                        "is_published": true,
                        "is_private": false,
                        "created_at": "2017-06-22T10:15:55+0300",
                        "has_responses": false,
                        "has_invites": false,
                        "geo": {
                            "id": "8",
                            "formatted_address": "Beijing, China",
                            "description": "Peking, Beijing, China",
                            "place_id": "ChIJuSwU55ZS8DURiqkPryBWYrk"
                        },                          
                        "modules": [
                            {
                                "name": "voicebot",
                                "label": "Voice bot"
                            },
                            {
                                "name": "video_interview",
                                "label": "Video interview"
                            }
                        ],
                        "countries": [
                            {"code":"AL","title":"Albania"}
                        ]
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }

### Delete vacancies [DELETE]

The ID field is required for each vacancy.

+ Request (application/json)

        {
            "vacancies": [
                {
                    "id": "1"
                },
                {
                    "id": "2"
                }
            ]
        }

+ Response 204 (application/json)




## Copy vacancies [/api/1.0/vacancy-copies]

### Copy vacancies [POST]

+ Request (application/json)

        {
            "vacancies": [
                {
                    "id": "2"
                },
                {
                    "id": "4"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "5",
                        "token": "41ea619a",
                        "name": "Finance Director",
                        "description": "Finance Director Vacancy",
                        "is_active": true,
                        "is_published": true,
                        "is_private": false,
                        "is_resume_required": false,
                        "created_at": "2017-06-22T10:15:55+0300",
                        "has_responses": true,
                        "has_invites": true,
                        "geo": {
                            "id": "8",
                            "formatted_address": "Beijing, China",
                            "description": "Peking, Beijing, China",
                            "place_id": "ChIJuSwU55ZS8DURiqkPryBWYrk"
                        },                        
                        "modules": [
                            {
                                "name": "voicebot",
                                "label": "Voice bot"
                            },
                            {
                                "name": "video_interview",
                                "label": "Video interview"
                            }
                        ]
                    },
                    {
                        "id": "6",
                        "token": "51ea619a",
                        "name": "Finance Manager",
                        "description": null,
                        "is_active": true,
                        "is_published": false,
                        "is_private": false,
                        "created_at": "2017-06-22T10:15:55+0300",
                        "has_responses": false,
                        "has_invites": false,
                        "modules": [
                            {
                                "name": "voicebot",
                                "label": "Voice bot"
                            },
                            {
                                "name": "video_interview",
                                "label": "Video interview"
                            }
                        ]
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }




## Vacancy [/api/1.0/vacancies/{vacancy_id}]

+ Parameters
    + vacancy_id (required, string, `1`) ... Vacancy id

### Retrieve vacancy [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "token": "41ea619a",
                    "name": "Finance Director",
                    "description": "Finance Director Vacancy",
                    "is_active": true,
                    "is_published": true,
                    "is_private": false,
                    "is_resume_required": false,
                    "created_at": "2017-06-22T10:15:55+0300",
                    "has_responses": true,
                    "has_invites": true,
                    "geo": {
                        "id": "1",
                        "formatted_address": "Florida, Buenos Aires Province, Argentina",
                        "description": "Florida, Buenos Aires Province, Argentina",
                        "place_id": "ChIJYTnrd8y2vJUR2Whxk65MQ-4"
                    },                    
                    "modules": [
                        {
                            "name": "voicebot",
                            "label": "Voice bot"
                        },
                        {
                            "name": "video_interview",
                            "label": "Video interview"
                        }
                    ],
                    "meta": {
                        "active_process": "schlum"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 0,
                "total": 0
            }
        }




## Public vacancies [/api/1.0/public-vacancies/{vacancy_token}]

### Retrieve public vacancy [GET]

+ Parameters
    + vacancy_token (string, `c5ed975f`) ... Vacancy token

+ Response 200 (application/json)

        {
            "data": [
                {
                    "token": "41ea619a",
                    "name": "Product Manager",
                    "description": null,
                    "is_resume_required": false,
                    "geo": null,
                    "company": {
                        "name": "VCV.RU",
                        "logo": "http://d1666pk5dosnis.cloudfront.net/vcv.ru/1014.png"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }




## Vacancy sources dictionary [/api/1.0/vacancy-sources]

### Retrieve sources [GET]

Retrieve vacancy permissions

+ Response 200 (application/json)

            {
                "data": [
                    {
                        "id": "1",
                        "name": "Invite"
                    },
                    {
                        "id": "2",
                        "name": "Public"
                    },
                    {
                        "id": "3",
                        "name": "HeadHunter"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 3
                }
            }




## Vacancy sources [/api/1.0/vacancies/{vacancy_id}/sources]

+ Parameters
    + vacancy_id (required, string, `1`) ... Vacancy id

### Retrieve sources [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "source": {
                        "id": 3,
                        "name": "HeadHunter"
                    },
                    "external_id": "22699090"
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }

### Create sources [POST]

+ Request (application/json)

        {
            "sources": [
                {
                    "source": {
                        "id": "3"
                    },
                    "external_id": "22699090"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "source": {
                            "id": 3,
                            "name": "HeadHunter"
                        },
                        "external_id": "22699090"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

### Update sources [PUT]

The ID field is required for each source.

+ Request (application/json)

        {
            "id": "3",
            "external_id": "22699090"
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "source": {
                            "id": 3,
                            "name": "HeadHunter"
                        },
                        "external_id": "22699090"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

### Delete sources [DELETE]

The ID field is required for each source.

+ Request (application/json)

        {
            "sources": [
                {
                    "id": "1"
                },
                {
                    "id": "2"
                }
            ]
        }

+ Response 204 (application/json)





## Vacancy permission dictionary [/api/1.0/vacancy-permissions]

### Retrieve permissions [GET]

Retrieve vacancy permissions

+ Response 200 (application/json)

            {
                "data": [
                    {
                        "id": "admin",
                        "name": "Admin"
                    },
                    {
                        "id": "read",
                        "name": "Only read"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }




## Vacancy user permissions [/api/1.0/vacancies/{vacancy_id}/permissions]

+ Parameters
    + vacancy_id (required, string, `1`) ... Vacancy id

### Retrieve permissions [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "admin",
                    "user": {
                        "email": "john.johnson@gmail.com"
                    }
                },
                {
                    "id": "admin",
                    "user": {
                        "email": "john.watson@gmail.com"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }


### Update permissions [PUT]

The ID and user.email fields are required for each permission.

+ Request (application/json)

        {
            "permissions": [
                {
                    "id": "read",
                    "user": {
                        "email": "john.johnson@gmail.com"
                    }
                },
                {
                    "id": "admin",
                    "user": {
                        "email": "john.watson@gmail.com"
                    }
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "read",
                        "user": {
                            "email": "john.johnson@gmail.com"
                        }
                    },
                    {
                        "id": "admin",
                        "user": {
                            "email": "john.watson@gmail.com"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }


### Delete permissions [DELETE]

The ID and user.email fields are required for each permission.

+ Request (application/json)

        {
            "permissions": [
                {
                    "id": "read",
                    "user": {
                        "email": "john.johnson@gmail.com"
                    }
                },
                {
                    "id": "admin",
                    "user": {
                        "email": "john.watson@gmail.com"
                    }
                }
            ]
        }

+ Response 204 (application/json)





## Vacancy Sms template [/api/1.0/vacancies/{vacancy_id}/sms-templates]

+ Parameters
    + vacancy_id (required, string, `1`) ... Vacancy id

### Retrieve vacancy sms template [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "template": "hello {{name}}",
                    "created_at": "2017-08-25T08:42:02-0700",
                    "vacancy": {
                        "id": 34,
                        "title": "Manager"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }

### Create new vacancy sms templates [POST]

Not implemented

+ Request (application/json)

        {
            "templates": [
                {
                    "template":"New sms teplate content", 
                }
            ]
        }

+ Response 201 (application/json)

    + Body        
        
            {
                "data": [
                    {
                        "id": "12",
                        "template": "New sms teplate content",
                        "created_at": "2017-08-29T02:27:44-0700",
                        "vacancy": {
                            "id": 34,
                            "title": "Manager"
                        }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

### Update vacancy sms templates [PUT]

+ Request (application/json)

        {
            "templates": [
                {
                    "template":"Updated template content",
                    "id": 12
                }
            ]
        }

+ Response 201 (application/json)

    + Body        
        
            {
                "data": [
                    {
                        "id": "12",
                        "template": "Updated template content",
                        "created_at": "2017-08-29T02:27:44-0700",
                        "vacancy": {
                            "id": 34,
                            "title": "Manager"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }


### Delete vacancy sms templates [DELETE]

Not implemented

+ Request (application/json)

        {
            "templates": [
                {
                    "id": 12
                }
            ]
        }

+ Response 200 (application/json)

    + Body        
        
            {
                "data": [
                    {
                        "id": "12",
                        "template": "Updated template content",
                        "created_at": "2017-08-29T02:27:44-0700",
                        "vacancy": {
                            "id": 34,
                            "title": "Manager"
                        },
                        "response_status": {
                            "id": 3,
                            "title": "Response status with id 3 title"
                        }
                    },
                    {
                        "id": "11",
                        "template": "Updated template content",
                        "created_at": "2017-08-29T02:27:44-0700",
                        "vacancy": {
                            "id": 34,
                            "title": "Manager"
                        },
                        "response_status": {
                            "id": 3,
                            "title": "Response status with id 3 title"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }


## Vacancy Sms remind template [/api/1.0/vacancies/{vacancy_id}/sms-remind-templates]

+ Parameters
    + vacancy_id (required, string, `1`) ... Vacancy id

### Retrieve vacancy sms template [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "template": "hello {{name}}",
                    "created_at": "2017-08-25T08:42:02-0700",
                    "enabled": true
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }

### Update vacancy sms remind templates [PUT]

+ Request (application/json)

        {
            "templates": [
                {
                    "template":"Updated template content",
                    "enabled": false,
                    "id": 12
                }
            ]
        }

+ Response 201 (application/json)

    + Body        
        
            {
                "data": [
                    {
                        "id": "12",
                        "template": "Updated template content",
                        "created_at": "2017-08-29T02:27:44-0700",
                        "enabled": false
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }


## Vacancy searchbot [/api/1.0/vacancies/{vacancy_id}/searchbot-tasks]

+ Parameters
    + vacancy_id (required, string, `1`) ... Vacancy id

### Retrieve vacancy searchbot tasks [GET]

+ Response 200 (application/json)

    + Attributes
        + data (array)
            + (object)
                + id: 2 (number) - Searchbot task id
                + time_start: 3600 (number, nullable) - Searchbot start time, seconds elapsed from 00:00
                + time_end: 7200 (number, nullable) - Searchbot end time, seconds elapsed from 00:00
                + time_offset: 0 (number, nullable) - Timezone offset, seconds
                + hourly_limit: 10 (number, nullable) - Hourly resume search limit
                + daily_limit: 100 (number, nullable) - Daily resume search limit
                + vacancy (object)
                    + id: 7 (number)
                    + name: `test` (string)
                + vacancy_link: `https://www.superjob.ru/vakansii/senior-php-developer-30495259.html` (string, nullable) - Superjob/headhunter vacancy link
                + vacancy_source (object) - Vacancy source
                    + id: 5 (number)
                    + name: `SuperJob` (string)
                + service_login: `test`  (string, nullable) - Superjob/headhunter login
                + service_app_id: `715`  (string, nullable) - Superjob application id
                + service_secret_key: `hash` (string, nullable) - Superjob application secret key
                + is_response_collection: true (boolean) - Is responce collection enabled
                + is_resume_search: true (boolean) - Is resume search enabled
                + created_at: `2017-11-28T02:14:12-0800` (string) - Task creation datetime
        + meta (object)
            + error: null (string, nullable)
            + page: 1 (number, nullable)
            + total: 3 (number, nullable)
            
### Create searchbot tasks [POST]

+ Request (application/json)

        {
            "tasks": [
                {
                    "id": 2,
                    "time_start": null,
                    "time_end": null,
                    "time_offset": null,
                    "hourly_limit": 25,
                    "daily_limit": null,
                    "vacancy_link": "https://www.superjob.ru/vakansii/senior-php-developer-30495259.html",
                    "vacancy_source": {
                        "id": 5
                    },
                    "service_login": "123",
                    "service_password": "123",
                    "service_app_id": "321",
                    "service_secret_key": "8fb67bf00b6867713b4ab31d3b2d0e7f82e944a",
                    "is_resume_search": false
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": 4,
                        "time_start": null,
                        "time_end": null,
                        "time_offset": null,
                        "hourly_limit": 25,
                        "daily_limit": null,
                        "vacancy": {
                            "id": 7,
                            "name": "test"
                        },
                        "vacancy_link": "https://www.superjob.ru/vakansii/senior-php-developer-30495259.html",
                        "vacancy_source": {
                            "id": 5,
                            "name": "SuperJob"
                        },
                        "service_login": "123",
                        "service_app_id": "321",
                        "service_secret_key": "8fb67bf00b6867713b4ab31d3b2d0e7f82e944a",
                        "is_response_collection": true,
                        "is_resume_search": true,
                        "created_at": "2017-11-28T07:55:41-0800"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

### Update searchbot tasks [PUT]

The ID field is required for each task.

+ Request (application/json)

        {
            "tasks": [
                {
                    "id": 2,
                    "time_start": null,
                    "time_end": null,
                    "time_offset": null,
                    "hourly_limit": 25,
                    "daily_limit": null,
                    "vacancy_link": "https://www.superjob.ru/vakansii/senior-php-developer-30495259.html",
                    "vacancy_source": {
                        "id": 5
                    },
                    "service_login": "123",
                    "service_password": "service password here",
                    "service_app_id": "321",
                    "service_secret_key": "8fb67bf00b6867713b4ab31d3b2d0e7f82e944a",
                    "is_response_collection": true,
                    "is_resume_search": true
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": 2,
                        "time_start": null,
                        "time_end": null,
                        "time_offset": null,
                        "hourly_limit": 25,
                        "daily_limit": null,
                        "vacancy": {
                            "id": 7,
                            "name": "test"
                        },
                        "vacancy_link": "https://www.superjob.ru/vakansii/senior-php-developer-30495259.html",
                        "vacancy_source": {
                            "id": 5,
                            "name": "SuperJob"
                        },
                        "service_login": "123",
                        "service_app_id": "321",
                        "service_secret_key": "8fb67bf00b6867713b4ab31d3b2d0e7f82e944a",
                        "is_response_collection": true,
                        "is_resume_search": false,
                        "created_at": "2017-11-28T02:14:12-0800"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }


## Searchbot superjob filters [/api/1.0/searchbot-tasks/{task_id}/superjob-filters]

+ Parameters
    + task_id (required, string, `1`) ... Searchbot task id

### Retrieve searchbot superjob filters [GET]

+ Response 200 (application/json)

    + Attributes
        + data (array)
            + (object)
                + id: 1 (number) - Filter id
                + keyword: `PHP` (string, nullable) - Search keyword
                + age_min: 22 (number, nullable) - Min age filter
                + age_max: 30 (number, nullable) - Max age filter
                + payment_from: 30000 (number, nullable) - Min salary filter
                + payment_to: 200000 (number, nullable) - Max salary filter
                + experience_month_from: 6 (number, nullable) - Min experience filter
                + experience_month_to: 120 (number, nullable) - Max experience filter
                + gender: 2 (number, nullable) - gender filter (see superjob filter references)
                + type_of_work: 6 (number, nullable) - Type of work filter (see superjob filter references)
                + place_of_work: 1 (number, nullable) - Place of work filter (see superjob filter references)
                + period: 60 (number, nullable) - Resume publication days filter (see superjob filter references)
                + moveable: 1 (number, nullable) - Moveable filter (see superjob filter references)
                + language: 1 (number, nullable) - Language filter (see superjob filter references)
                + language_levels (array, nullable) - Language level filter (see superjob filter lang level reference)
                    + 5 (number)
                + business_trip: 1 (number, nullable) - Business trip filter (see superjob filter references)
                + maritalstatus: 1 (number, nullable) - Marital status filter (see superjob filter references)
                + catalogues (array, nullable) - Catalogues filter (see superjob filter catalogues)
                    + 33 (number)
                + citizenship (array, nullable) - Citizenship filter (see superjob filter references)
                    + 1 (number)
                    + 23 (number)
                + city: `Казань` (string, nullable) - City filter 
                + education: 2 (number, nullable) - Education filter (see superjob filter references)
        + meta (object)
            + error: null (string, nullable)
            + page: 1 (number, nullable)
            + total: 3 (number, nullable)
            
### Create searchbot superjob filter [POST]

All filter fields are optional

+ Request (application/json)

    + Attributes
        + filters (array)
            + (object)
                + keyword: `PHP` (optional, nullable, string) - Search keyword
                + age_min: 22 (number, nullable, optional) - Min age filter
                + age_max: 30 (number, nullable, optional) - Max age filter
                + payment_from: 30000 (number, nullable, optional) - Min salary filter
                + payment_to: 200000 (number, nullable, optional) - Max salary filter
                + experience_month_from: 6 (number, nullable, optional) - Min experience filter
                + experience_month_to: 120 (number, nullable, optional) - Max experience filter
                + gender: 2 (number, nullable, optional) - gender filter (see superjob filter references)
                + type_of_work: 6 (number, nullable, optional) - Type of work filter (see superjob filter references)
                + place_of_work: 1 (number, nullable, optional) - Place of work filter (see superjob filter references)
                + period: 60 (number, nullable, optional) - Resume publication days filter (see superjob filter references)
                + moveable: 1 (number, nullable, optional) - Moveable filter (see superjob filter references)
                + language: 1 (number, nullable, optional) - Language filter (see superjob filter references)
                + language_levels (array, nullable, optional) - Language level filter (see superjob filter lang level reference)
                    + 5 (number)
                + business_trip: 1 (number, nullable, optional) - Business trip filter (see superjob filter references)
                + maritalstatus: 1 (number, nullable, optional) - Marital status filter (see superjob filter references)
                + catalogues (array, nullable, optional) - Catalogues filter (see superjob filter catalogues)
                    + 33 (number)
                + citizenship (array, nullable, optional) - Citizenship filter (see superjob filter references)
                    + 1 (number)
                    + 23 (number)
                + city: `Казань` (string, nullable, optional) - City filter 
                + education: 2 (number, nullable, optional) - Education filter (see superjob filter references)

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": 8,
                        "keyword": "PHP",
                        "age_min": 22,
                        "age_max": 30,
                        "payment_from": 30000,
                        "payment_to": 200000,
                        "experience_month_from": 6,
                        "experience_month_to": 6,
                        "gender": 2,
                        "type_of_work": 6,
                        "place_of_work": 1,
                        "period": 60,
                        "moveable": 1,
                        "language": 1,
                        "language_levels": [
                            5
                        ],
                        "business_trip": 1,
                        "maritalstatus": 1,
                        "catalogues": [
                            33
                        ],
                        "citizenship": [
                            1,
                            23
                        ],
                        "city": "Казань",
                        "education": 2
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

### Update searchbot superjob filter [PUT]

Only ID field is required for each filter. Skip field if value hasn't changed

+ Request (application/json)

        {
            "filters": [
                {
                    "id": 8,
                    "keyword": "Backend php",
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": 8,
                        "keyword": "Backend php",
                        "age_min": 22,
                        "age_max": 30,
                        "payment_from": 30000,
                        "payment_to": 200000,
                        "experience_month_from": 6,
                        "experience_month_to": 6,
                        "gender": 2,
                        "type_of_work": 6,
                        "place_of_work": 1,
                        "period": 60,
                        "moveable": 1,
                        "language": 1,
                        "language_levels": [
                            5
                        ],
                        "business_trip": 1,
                        "maritalstatus": 1,
                        "catalogues": [
                            33
                        ],
                        "citizenship": [
                            1,
                            23
                        ],
                        "city": "Казань",
                        "education": 2
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }


## Searchbot superjob filter references [/api/1.0/searchbot-tasks/{task_id}/superjob-filters/references]

### Retrieve searchbot superjob filter references [GET]

+ Parameters
    + task_id (required, string, `1`) ... Searchbot task id

+ Response 200 (application/json)

    + Body
    
            {
                "data": [
                    {
                        "code": "gender",
                        "values": [
                            {
                                "id": 0,
                                "title": "Не имеет значения"
                            },
                            {
                                "id": 2,
                                "title": "Мужской"
                            },
                            {
                                "id": 3,
                                "title": "Женский"
                            }
                        ]
                    },
                    {
                        "code": "type_of_work",
                        "values": [
                            {
                                "id": 0,
                                "title": "не имеет значения"
                            },
                            {
                                "id": 6,
                                "title": "полный рабочий день"
                            },
                            {
                                "id": 10,
                                "title": "неполный рабочий день"
                            },
                            {
                                "id": 12,
                                "title": "сменный график работы"
                            },
                            {
                                "id": 13,
                                "title": "частичная занятость"
                            },
                            {
                                "id": 7,
                                "title": "временная работа / freelance"
                            },
                            {
                                "id": 9,
                                "title": "работа вахтовым методом"
                            }
                        ]
                    },
                    {
                        "code": "place_of_work",
                        "values": [
                            {
                                "id": 0,
                                "title": "не имеет значения"
                            },
                            {
                                "id": 1,
                                "title": "на территории работодателя"
                            },
                            {
                                "id": 2,
                                "title": "на дому"
                            },
                            {
                                "id": 3,
                                "title": "разъездного характера"
                            }
                        ]
                    },
                    {
                        "code": "period",
                        "values": [
                            {
                                "id": 0,
                                "title": "все время"
                            },
                            {
                                "id": 1,
                                "title": "24 часа"
                            },
                            {
                                "id": 3,
                                "title": "3 дня"
                            },
                            {
                                "id": 7,
                                "title": "неделю"
                            },
                            {
                                "id": 14,
                                "title": "2 недели"
                            },
                            {
                                "id": 30,
                                "title": "1 месяц"
                            },
                            {
                                "id": 60,
                                "title": "2 месяца"
                            }
                        ]
                    },
                    {
                        "code": "moveable",
                        "values": [
                            {
                                "id": 0,
                                "title": "не готов"
                            },
                            {
                                "id": 1,
                                "title": "готов"
                            }
                        ]
                    },
                    {
                        "code": "language",
                        "values": [
                            {
                                "id": 0,
                                "title": "Не имеет значения"
                            },
                            {
                                "id": 1,
                                "title": "Английский"
                            },
                            {
                                "id": 62,
                                "title": "Аварский"
                            },
                            {
                                "id": 50,
                                "title": "Азербайджанский"
                            },
                            {
                                "id": 58,
                                "title": "Албанский"
                            },
                            {
                                "id": 82,
                                "title": "Амхарский"
                            },
                            {
                                "id": 6,
                                "title": "Арабский"
                            },
                            {
                                "id": 7,
                                "title": "Армянский"
                            },
                            {
                                "id": 83,
                                "title": "Африкаанс"
                            },
                        ]
                    },
                    {
                        "code": "lang_level",
                        "values": [
                            {
                                "id": 0,
                                "title": "Не имеет значения"
                            },
                            {
                                "id": 3,
                                "title": "Базовый"
                            },
                            {
                                "id": 5,
                                "title": "Технический"
                            },
                            {
                                "id": 7,
                                "title": "Разговорный"
                            },
                            {
                                "id": 9,
                                "title": "Свободно владею"
                            }
                        ]
                    },
                    {
                        "code": "business_trip",
                        "values": [
                            {
                                "id": 0,
                                "title": "не имеет значения"
                            },
                            {
                                "id": 1,
                                "title": "не готов"
                            },
                            {
                                "id": 2,
                                "title": "готов"
                            }
                        ]
                    },
                    {
                        "code": "maritalstatus",
                        "values": [
                            {
                                "id": 0,
                                "title": "не имеет значения"
                            },
                            {
                                "id": 2,
                                "title": "cостоит в браке"
                            },
                            {
                                "id": 3,
                                "title": "не состоит в браке"
                            }
                        ]
                    },
                    {
                        "code": "citizenship",
                        "values": [
                            {
                                "id": 1,
                                "title": "Россия"
                            },
                            {
                                "id": 23,
                                "title": "Абхазия"
                            },
                            {
                                "id": 14,
                                "title": "Азербайджан"
                            },
                            {
                                "id": 13,
                                "title": "Армения"
                            },
                            {
                                "id": 10,
                                "title": "Беларусь"
                            },
                            {
                                "id": 12,
                                "title": "Грузия"
                            },
                            {
                                "id": 15,
                                "title": "Казахстан"
                            },
                            {
                                "id": 18,
                                "title": "Кыргызстан"
                            },
                            {
                                "id": 20,
                                "title": "Латвия"
                            },
                            {
                                "id": 21,
                                "title": "Литва"
                            },
                            {
                                "id": 11,
                                "title": "Молдова"
                            },
                            {
                                "id": 17,
                                "title": "Таджикистан"
                            },
                            {
                                "id": 19,
                                "title": "Туркменистан"
                            },
                            {
                                "id": 16,
                                "title": "Узбекистан"
                            },
                            {
                                "id": 9,
                                "title": "Украина"
                            },
                            {
                                "id": 22,
                                "title": "Эстония"
                            },
                            {
                                "id": 24,
                                "title": "Южная Осетия"
                            },
                            {
                                "id": 1000,
                                "title": "Дальнее зарубежье"
                            }
                        ]
                    },
                    {
                        "code": "education",
                        "values": [
                            {
                                "id": 0,
                                "title": "Не имеет значения"
                            },
                            {
                                "id": 2,
                                "title": "Высшее"
                            },
                            {
                                "id": 3,
                                "title": "Неполное высшее"
                            },
                            {
                                "id": 4,
                                "title": "Среднее специальное"
                            },
                            {
                                "id": 5,
                                "title": "Среднее"
                            },
                            {
                                "id": 6,
                                "title": "Учащийся школы"
                            }
                        ]
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 11
                }
            }


## Searchbot superjob filter catalogues [/api/1.0/searchbot-tasks/{task_id}/superjob-filters/catalogues]

### Retrieve searchbot superjob filter catalogues [GET]
+ Parameters
    + task_id (required, string, `1`) ... Searchbot task id

+ Response 200 (application/json)

    + Body
    
            {
                "data": [
                    {
                        "id": 1,
                        "title": "Административная работа, секретариат, АХО",
                        "catalogues": [
                            {
                                "id": 3,
                                "title": "Архивное дело"
                            },
                            {
                                "id": 2,
                                "title": "АХО"
                            },
                            {
                                "id": 4,
                                "title": "Делопроизводство, ввод данных, систематизация"
                            },
                            {
                                "id": 5,
                                "title": "Диспетчерская служба"
                            },
                            {
                                "id": 6,
                                "title": "Курьерская служба"
                            },
                            {
                                "id": 7,
                                "title": "Переводы"
                            },
                            {
                                "id": 8,
                                "title": "Секретариат, ресепшн, офис-менеджмент"
                            },
                            {
                                "id": 9,
                                "title": "Другое"
                            },
                            {
                                "id": 10,
                                "title": "Начало карьеры, мало опыта"
                            }
                        ]
                    },
                    {
                        "id": 62,
                        "title": "Дизайн",
                        "catalogues": [
                            {
                                "id": 63,
                                "title": "Архитектура"
                            },
                            {
                                "id": 64,
                                "title": "Аудио, видео"
                            },
                            {
                                "id": 65,
                                "title": "Верстка, дизайн"
                            },
                            {
                                "id": 66,
                                "title": "Графическое искусство, иллюстрации"
                            },
                            {
                                "id": 67,
                                "title": "Дизайн интерьера"
                            },
                            {
                                "id": 68,
                                "title": "Компьютерная анимация и мультимедиа"
                            },
                            {
                                "id": 69,
                                "title": "Ландшафтный дизайн"
                            },
                            {
                                "id": 70,
                                "title": "Мода и Аксессуары"
                            },
                            {
                                "id": 71,
                                "title": "Промышленный дизайн"
                            },
                            {
                                "id": 72,
                                "title": "Рекламный дизайн"
                            },
                            {
                                "id": 73,
                                "title": "Фотография"
                            },
                            {
                                "id": 74,
                                "title": "Другое"
                            },
                            {
                                "id": 75,
                                "title": "Начало карьеры, мало опыта"
                            }
                        ]
                    },
                    {
                        "id": 471,
                        "title": "Домашний персонал",
                        "catalogues": [
                            {
                                "id": 472,
                                "title": "Ведение хозяйства"
                            },
                            {
                                "id": 473,
                                "title": "Домашний уход за больными, престарелыми, инвалидами"
                            },
                            {
                                "id": 474,
                                "title": "Домашний уход за детьми"
                            },
                            {
                                "id": 475,
                                "title": "Уборка и помощь по дому"
                            },
                            {
                                "id": 476,
                                "title": "Другое"
                            },
                            {
                                "id": 477,
                                "title": "Начало карьеры, мало опыта"
                            }
                        ]
                    },
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 30
                }
            }

## Tests [/api/1.0/tests{?vacancy_id}]

### Retrieve tests [GET]

+ Parameters
    + vacancy_id (string, `1`) ... Vacancy id

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "is_active": true,
                    "vacancy": {
                        "id": "1"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "Who was the first president of USA?",
                            "type": "choice",
                            "answers": [
                                {
                                    "id": "1",
                                    "body": "George Washington"
                                },
                                {
                                    "id": "2",
                                    "body": "John Adams"
                                },
                                {
                                    "id": "3",
                                    "body": "Thomas Jefferson"
                                }
                            ]
                        },
                        {
                            "id": "2",
                            "name": "Question 2",
                            "body": "Who was the second president of USA?",
                            "type": "value",
                            "answers": []
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }

### Update tests [PUT]

The ID field is required for each test.

+ Request (application/json)

        {
            "tests": [
                {
                    "id": "1",
                    "is_active": false
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "is_active": false,
                        "vacancy": {
                            "id": "1"
                        },
                        "questions": [
                            {
                                "id": "1",
                                "name": "Question 1",
                                "body": "Who was the first president of USA?",
                                "type": "choice",
                                "answers": [
                                    {
                                        "id": "1",
                                        "body": "George Washington"
                                    },
                                    {
                                        "id": "2",
                                        "body": "John Adams"
                                    },
                                    {
                                        "id": "3",
                                        "body": "Thomas Jefferson"
                                    }
                                ]
                            },
                            {
                                "id": "2",
                                "name": "Question 2",
                                "body": "Who was the second president of USA?",
                                "type": "value",
                                "answers": []
                            }
                        ]
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }



        
## Test [/api/1.0/tests/{test_id}]

+ Parameters
    + test_id (required, string, `1`) ... Test id

### Retrieve test [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "is_active": false,
                    "vacancy": {
                        "id": "1"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "Who was the first president of USA?",
                            "type": "choice",
                            "answers": [
                                {
                                    "id": "1",
                                    "body": "George Washington"
                                },
                                {
                                    "id": "2",
                                    "body": "John Adams"
                                },
                                {
                                    "id": "3",
                                    "body": "Thomas Jefferson"
                                }
                            ]
                        },
                        {
                            "id": "2",
                            "name": "Question 2",
                            "body": "Who was the second president of USA?",
                            "type": "value",
                            "answers": []
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 0,
                "total": 0
            }
        }




## Test questions [/api/1.0/tests/{test_id}/questions]

+ Parameters
    + test_id (required, string, `1`) ... Test id
    
### Create new questions [POST]

+ Request (application/json)

        {
            "questions": [
                {
                    "name": "Question 1",
                    "body": "Who was the first president of USA?",
                    "type": "choice"
                },
                {
                    "name": "Question 2",
                    "body": "Who was the second president of USA?",
                    "type": "value"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "name": "Question 1",
                        "body": "Who was the first president of USA?",
                        "type": "choice"
                    },
                    {
                        "name": "Question 2",
                        "body": "Who was the second president of USA?",
                        "type": "value"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }

### Update questions [PUT]

The ID field is required for each question.

+ Request (application/json)

        {
            "questions": [
                {
                    "id": "1",
                    "name": "Question 1",
                    "body": "Who was the first president of USA?",
                    "type": "value"
                },
                {
                    "id": "2",
                    "type": "choice"
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "name": "Question 1",
                        "body": "Who was the first president of USA?",
                        "type": "value",
                        "answers": [
                            {
                                "id": "5",
                                "body": "George Washington"
                            }
                        ]
                    },
                    {
                        "id": "2",
                        "type": "choice",
                        "answers": [
                            {
                                "id": "6",
                                "body": "George Washington"
                            },
                            {
                                "id": "4",
                                "body": "John Adams"
                            }
                        ]
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }

### Delete questions [DELETE]

The ID field is required for each question.

+ Request (application/json)

        {
            "questions": [
                {
                    "id": "1"
                },
                {
                    "id": "2"
                }
            ]
        }

+ Response 204 (application/json)





## Test answers [/api/1.0/tests/{test_id}/questions/{question_id}/answers]

+ Parameters
    + test_id (required, string, `1`) ... Test id
    + question_id (required, string, `2`) ... Question id
    
### Create new answers for question [POST]

+ Request (application/json)

        {
            "answers": [
                {
                    "body": "George Washington",
                    "is_valid": true
                },
                {
                    "body": "John Adams",
                    "is_valid": false
                },
                {
                    "body": "Thomas Jefferson",
                    "is_valid": false
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "body": "George Washington",
                        "is_valid": true
                    },
                    {
                        "id": "2",
                        "body": "John Adams",
                        "is_valid": false
                    },
                    {
                        "id": "3",
                        "body": "Thomas Jefferson",
                        "is_valid": false
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 3
                }
            }

### Update answers for question [PUT]

The ID field is required for each answer.

+ Request (application/json)

        {
            "answers": [
                {
                    "id": "1",
                    "body": "George Washington",
                    "is_valid": false
                },
                {
                    "id": "2",
                    "body": "John Adams",
                    "is_valid": true
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "body": "George Washington",
                        "is_valid": false
                    },
                    {
                        "id": "2",
                        "body": "John Adams",
                        "is_valid": true
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }

### Delete answers for question [DELETE]

The ID field is required for each answer.

+ Request (application/json)

        {
            "answers": [
                {
                    "id": "1"
                },
                {
                    "id": "2"
                }
            ]
        }

+ Response 204 (application/json)




## Voicebots [/api/1.0/voicebots{?vacancy_id}]

### Retrieve voicebots [GET]

+ Parameters
    + vacancy_id (string, `1`) ... Vacancy id

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "is_active": true,
                    "vacancy": {
                        "id": "1"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "How are you?",
                            "is_required": true
                        },
                        {
                            "id": "2",
                            "name": "Question 2",
                            "body": "Do you want to work?",
                            "is_required": false
                        }
                    ],
                    "options": [
                        {
                            "id": "1",
                            "name": "Dialect",
                            "values": [
                                {
                                    "id": "US",
                                    "name": "US"
                                }
                            ]
                        },
                        {
                            "id": "2",
                            "name": "Gender",
                            "values": [
                                {
                                    "id": "Female",
                                    "name": "Female"
                                }
                            ]
                        },
                        {
                            "id": "3",
                            "name": "Rate",
                            "values": [
                                {
                                    "id": "default",
                                    "name": "default"
                                }
                            ]
                        },
                        {
                            "id": "4",
                            "name": "Volume",
                            "values": [
                                {
                                    "id": "default",
                                    "name": "default"
                                }
                            ]
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }

### Update voicebots [PUT]

Sends only modified data. Updates only specified fields. The ID field is required for each voicebot.

+ Request (application/json)

        {
            "voicebots": [
                {
                    "id": "1",
                    "is_active": false
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "is_active": false,
                        "vacancy": {
                            "id": "1"
                        },
                        "questions": [
                            {
                                "id": "1",
                                "name": "Question 1",
                                "body": "How are you?",
                                "is_required": true
                            },
                            {
                                "id": "2",
                                "name": "Question 2",
                                "body": "Do you want to work?",
                                "is_required": false
                            }
                        ],
                        "options": [
                            {
                            "id": "1",
                            "name": "Dialect",
                            "values": [
                                {
                                    "id": "US",
                                    "name": "US"
                                }
                            ]
                            },
                            {
                                "id": "2",
                                "name": "Gender",
                                "values": [
                                    {
                                        "id": "Female",
                                        "name": "Female"
                                    }
                                ]
                            },
                            {
                                "id": "3",
                                "name": "Rate",
                                "values": [
                                    {
                                        "id": "default",
                                        "name": "default"
                                    }
                                ]
                            },
                            {
                                "id": "4",
                                "name": "Volume",
                                "values": [
                                    {
                                        "id": "default",
                                        "name": "default"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }



        
## Voicebot [/api/1.0/voicebots/{voicebot_id}]

+ Parameters
    + voicebot_id (required, string, `1`) ... Voicebot id

### Retrieve voicebot [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "is_active": true,
                    "vacancy": {
                        "id": "1"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "How are you?",
                            "is_required": true
                        },
                        {
                            "id": "2",
                            "name": "Question 2",
                            "body": "Do you want to work?",
                            "is_required": false
                        }
                    ],
                    "options": [
                        {
                            "id": "1",
                            "name": "Dialect",
                            "values": [
                                {
                                    "id": "US",
                                    "name": "US"
                                }
                            ]
                        },
                        {
                            "id": "2",
                            "name": "Gender",
                            "values": [
                                {
                                    "id": "Female",
                                    "name": "Female"
                                }
                            ]
                        },
                        {
                            "id": "3",
                            "name": "Rate",
                            "values": [
                                {
                                    "id": "default",
                                    "name": "default"
                                }
                            ]
                        },
                        {
                            "id": "4",
                            "name": "Volume",
                            "values": [
                                {
                                    "id": "default",
                                    "name": "default"
                                }
                            ]
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 0,
                "total": 0
            }
        }




## Voicebot options dictionary [/api/1.0/voicebot-options]

### Retrieve options [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "name": "Dialect",
                    "type": "list",
                    "values": [
                        {
                            "id": "US",
                            "name": "US"
                        },
                        {
                            "id": "UK",
                            "name": "UK"
                        }
                    ]
                },
                {
                    "id": "2",
                    "name": "Gender",
                    "type": "list",
                    "values": [
                        {
                            "id": "Male",
                            "name": "Male"
                        },
                        {
                            "id": "Female",
                            "name": "Female"
                        }
                    ]
                },
                {
                    "id": "3",
                    "name": "Rate",
                    "type": "list",
                    "values": [
                        {
                            "id": "slow",
                            "name": "slow"
                        },
                        {
                            "id": "fast",
                            "name": "fast"
                        }
                    ]
                },
                {
                    "id": "4",
                    "name": "Volume",
                    "type": "list",
                    "values": [
                        {
                            "id": "soft",
                            "name": "soft"
                        },
                        {
                            "id": "loud",
                            "name": "loud"
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }




## Voicebot options [/api/1.0/voicebots/{voicebot_id}/options]

+ Parameters
    + voicebot_id (required, string, `1`) ... Voicebot id

### Update options [PUT]

The ID field is required for each option.

+ Request (application/json)

        {
            "options": [
                {
                    "id": "1",
                    "values": [
                        {
                            "id": "2"
                        }
                    ]
                },
                {
                    "id": "2",
                    "values": [
                        {
                            "id": "3"
                        }
                    ]
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "name": "Dialect",
                        "values": [
                            {
                                "id": "UK",
                                "name": "UK"
                            }
                        ]
                    },
                    {
                        "id": "2",
                        "name": "Gender",
                        "values": [
                            {
                                "id": "Male",
                                "name": "Male"
                            }
                        ]
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }



## Voicebot questions [/api/1.0/voicebots/{voicebot_id}/questions]

+ Parameters
    + voicebot_id (required, string, `1`) ... Voicebot id
    
### Create new questions [POST]

+ Request (application/json)

        {
            "questions": [
                {
                    "name": "Question 1",
                    "body": "How are you?",
                    "is_required": true,
                    "priority": 1000
                },
                {
                    "name": "Question 2",
                    "body": "Do you want to work?",
                    "is_required": false,
                    "priority": 2000
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "name": "Question 1",
                        "body": "How are you?",
                        "is_required": true,
                        "priority": 1000
                    },
                    {
                        "id": "2",
                        "name": "Question 2",
                        "body": "Do you want to work?",
                        "is_required": false,
                        "priority": 2000
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }

### Update questions [PUT]

Sends only modified data. Updates only specified fields. The ID field is required for each question.

+ Request (application/json)

        {
            "questions": [
                {
                    "id": "1",
                    "body": "How are you, buddy?",
                    "is_required": false,
                    "priority": 3000
                },
                {
                    "id": "2",
                    "name": "Important question",
                    "body": "Do you want to work???"
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "name": "Question 1",
                        "body": "How are you, buddy?",
                        "is_required": false,
                        "priority": 3000
                    },
                    {
                        "id": "2",
                        "name": "Important question",
                        "body": "Do you want to work???",
                        "is_required": false,
                        "priority": 2000
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }

### Delete questions [DELETE]

The ID field is required for each question.

+ Request (application/json)

        {
            "questions": [
                {
                    "id": "1"
                },
                {
                    "id": "2"
                }
            ]
        }

+ Response 204 (application/json)


## Voicebot scenarios [/api/1.0/voicebots/{voicebot_id}/scenarios]

+ Parameters
    + voicebot_id (required, string, `1`) ... Voicebot id


### Retrieve scenarios [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": 1,
                    "nodes": [
                        {
                            "id": "4297f44b",
                            "type": "start",
                            "text": "How are you?",
                            "action_id": 1,
                            "result": null
                        },
                        {
                            "id": "399d7a93",
                            "type": "question",
                            "text": "Do you want to work?",
                            "action_id": 2,
                            "result": null
                        },
                        {
                            "id": "235245bz",
                            "type": "terminate",
                            "text": "Ok, bye",
                            "action_id": 3,
                            "result": "refused"
                        },
                        {
                            "id": "1d18e56e",
                            "type": "terminate",
                            "text": "Ok, bye",
                            "action_id": 4,
                            "result": "confirmed"
                        },
                    ],
                    "edges": [
                        {
                            "source": "4297f44b",
                            "target": "399d7a93",
                            "label": null,
                            "options": null,
                        },
                        {
                            "source": "399d7a93",
                            "target": "235245bz",
                            "label": "no",
                            "options": [],
                        },
                        {
                            "source": "399d7a93",
                            "target": "1d18e56e",
                            "label": "yes",
                            "options": ["true"],
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }


### Update scenarios [PUT]


+ Request (application/json)

        {
            "scenarios": [
                {
                    "id": 1,
                    "nodes": [
                        {
                            "id": "4297f44b",
                            "type": "start",
                            "text": "How are you?",
                            "action_id": 1,
                            "result": null
                        },
                        {
                            "id": "399d7a93",
                            "type": "question",
                            "text": "Do you want to work?",
                            "action_id": 2,
                            "result": null
                        },
                        {
                            "id": "235245bz",
                            "type": "terminate",
                            "text": "Ok, bye",
                            "action_id": 3,
                            "result": "refused"
                        },
                        {
                            "id": "1d18e56e",
                            "type": "terminate",
                            "text": "Ok, bye",
                            "action_id": 4,
                            "result": "confirmed"
                        },
                        {
                            "id": "ab1f953c",
                            "type": "terminate",
                            "text": "",
                            "action_id": null,
                            "result": "recall"
                        }
                    ],
                    "edges": [
                        {
                            "source": "4297f44b",
                            "target": "399d7a93",
                            "label": null,
                            "options": null,
                        },
                        {
                            "source": "399d7a93",
                            "target": "235245bz",
                            "label": "no",
                            "options": [],
                        },
                        {
                            "source": "399d7a93",
                            "target": "1d18e56e",
                            "label": "yes",
                            "options": ["true"],
                        },
                        {
                            "source": "399d7a93",
                            "target": "ab1f953c",
                            "label": "call back later",
                            "options": [],
                        }
                    ]
                }
            ],
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": 1,
                        "nodes": [
                            {
                                "id": "4297f44b",
                                "type": "start",
                                "text": "How are you?",
                                "action_id": 1,
                                "result": null
                            },
                            {
                                "id": "399d7a93",
                                "type": "question",
                                "text": "Do you want to work?",
                                "action_id": 2,
                                "result": null
                            },
                            {
                                "id": "235245bz",
                                "type": "terminate",
                                "text": "Ok, bye",
                                "action_id": 3,
                                "result": "refused"
                            },
                            {
                                "id": "1d18e56e",
                                "type": "terminate",
                                "text": "Ok, bye",
                                "action_id": 4,
                                "result": "confirmed"
                            },
                            {
                                "id": "ab1f953c",
                                "type": "terminate",
                                "text": "",
                                "action_id": 5,
                                "result": "recall"
                            }
                        ],
                        "edges": [
                            {
                                "source": "4297f44b",
                                "target": "399d7a93",
                                "label": null,
                                "options": null,
                            },
                            {
                                "source": "399d7a93",
                                "target": "235245bz",
                                "label": "no",
                                "options": [],
                            },
                            {
                                "source": "399d7a93",
                                "target": "1d18e56e",
                                "label": "yes",
                                "options": ["true"],
                            },
                            {
                                "source": "399d7a93",
                                "target": "ab1f953c",
                                "label": "call back later",
                                "options": [],
                            }
                        ]
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }



## Voicebot audios [/api/1.0/voicebot-audios]

### Create new audios [POST]

+ Request (application/json)

        {
            "audios": [
                {
                    "hash": "595a4c5ab252b",
                    "text": "How are you?"
                },
                {
                    "hash": "595a4c6f324b1",
                    "text": "Do you want to work?"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "hash": "595a4c5ab252b",
                        "text": "How are you?",
                        "source": "http://domain.com/595a4c5ab252b.mp3"
                    },
                    {
                        "hash": "595a4c6f324b1",
                        "text": "Do you want to work?"
                        "source": "http://domain.com/595a4c6f324b1.mp3"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }




## Video interviews [/api/1.0/video_interviews{?vacancy_id}]

### Retrieve video interviews [GET]

+ Parameters
    + vacancy_id (string, `1`) ... Vacancy id

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "is_active": true,
                    "vacancy": {
                        "id": "1"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "How are you?",
                            "is_required": true,
                            "answer_time": 120,
                            "preparation_time": 40,
                            "retryable": false
                        },
                        {
                            "id": "2",
                            "name": "Question 2",
                            "body": "Do you want to work?",
                            "is_required": false,
                            "answer_time": 180,
                            "preparation_time": 40,
                            "retryable": false
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }

### Update video interviews [PUT]

Sends only modified data. Updates only specified fields. The ID field is required for each video interview.

+ Request (application/json)

        {
            "video_interviews": [
                {
                    "id": "1",
                    "is_active": false
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "is_active": false,
                        "vacancy": {
                            "id": "1"
                        },
                        "questions": [
                            {
                                "id": "1",
                                "name": "Question 1",
                                "body": "How are you?",
                                "is_required": true,
                                "answer_time": 120,
                                "preparation_time": 40,
                                "retryable": false
                            },
                            {
                                "id": "2",
                                "name": "Question 2",
                                "body": "Do you want to work?",
                                "is_required": false,
                                "answer_time": 180,
                                "preparation_time": 40,
                                "retryable": false
                            }
                        ]
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }





## Video interview [/api/1.0/video_interviews/{interview_id}]

+ Parameters
    + interview_id (required, string, `1`) ... Video interview id

### Retrieve video interview [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "is_active": true,
                    "vacancy": {
                        "id": "1"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "How are you?",
                            "is_required": true,
                            "answer_time": 120,
                            "preparation_time": 40,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_en": false
                        },
                        {
                            "id": "2",
                            "name": "Question 2",
                            "body": "Do you want to work?",
                            "is_required": false,
                            "answer_time": 180,
                            "preparation_time": 40,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_en": false
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 0,
                "total": 0
            }
        }




## Video interview questions [/api/1.0/video_interviews/{interview_id}/questions]

"is_en" flag is used in special process, mark question which answer must be in english

+ Parameters
    + interview_id (required, string, `1`) ... Video interview id
    
### Create new questions [POST]

+ Request (application/json)

        {
            "questions": [
                {
                    "name": "Question 1",
                    "body": "How are you?",
                    "is_required": true,
                    "answer_time": 120,
                    "preparation_time": 40,
                    "priority": 1000,
                    "retryable": false,
                    "is_video_answer_enabled": true,
                    "is_text_answer_enabled": false,
                    "is_en": false
                },
                {
                    "name": "Question 2",
                    "body": "Do you want to work?",
                    "is_required": false,
                    "answer_time": 180,
                    "preparation_time": 40,
                    "priority": 2000,
                    "retryable": false,
                    "is_video_answer_enabled": true,
                    "is_text_answer_enabled": false,
                    "is_en": false
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "name": "Question 1",
                        "body": "How are you?",
                        "is_required": true,
                        "answer_time": 120,
                        "preparation_time": 40,
                        "priority": 1000,
                        "retryable": false,
                        "is_video_answer_enabled": true,
                        "is_text_answer_enabled": false,
                        "is_en": false
                    },
                    {
                        "id": "2",
                        "name": "Question 2",
                        "body": "Do you want to work?",
                        "is_required": false,
                        "answer_time": 180,
                        "preparation_time": 40,
                        "priority": 2000,
                        "retryable": false,
                        "is_video_answer_enabled": true,
                        "is_text_answer_enabled": false,
                        "is_en": false
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }

### Update questions [PUT]

Sends only modified data. Updates only specified fields. The ID field is required for each question.

+ Request (application/json)

        {
            "questions": [
                {
                    "id": "1",
                    "body": "How are you, buddy?",
                    "is_required": false,
                    "answer_time": 90,
                    "preparation_time": 20,
                    "priority": 3000,
                    "retryable": true,
                    "is_video_answer_enabled": true,
                    "is_text_answer_enabled": false,
                    "is_en": false
                },
                {
                    "id": "2",
                    "body": "Do you want to work???"
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "name": "Question 1",
                        "body": "How are you, buddy?",
                        "is_required": false,
                        "answer_time": 90,
                        "preparation_time": 20,
                        "priority": 3000,
                        "retryable": true,
                        "is_video_answer_enabled": true,
                        "is_text_answer_enabled": false,
                        "is_en": false
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }

### Delete questions [DELETE]

The ID field is required for each question.

+ Request (application/json)

        {
            "questions": [
                {
                    "id": "1"
                },
                {
                    "id": "2"
                }
            ]
        }

+ Response 200 (application/json)

## Vacancy competences [/api/1.0/vacancy/{vacancy_id}/competences]

### Retrieve competences settings [GET /api/1.0/vacancy/{vacancy_id}/competences/settings]

List of possible settings list

+ Response 200 (application/json)

    + Body
    
            {
                "data": [
                    {
                        "view" : [
                            {
                                "id" : "1",
                                "name" : "Circle"
                            },
                            {
                                "id" : "2",
                                "name" : "Star"
                            }
                        ],
                        "level" : [
                            {
                                "id" : "1",
                                "name" : "2x",
                                "min_value" : 1,
                                "max_value" : 2
                            },
                            {
                                "id" : "2",
                                "name" : "3x",
                                "min_value" : 1,
                                "max_value" : 3
                            },
                            {
                                "id" : "3",
                                "name" : "4x",
                                "min_value" : 1,
                                "max_value" : 4
                            },
                            {
                                "id" : "4",
                                "name" : "5x",
                                "min_value" : 1,
                                "max_value" : 5
                            }
                        ]
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

### Retrieve competences list [GET /api/1.0/vacancy/{vacancy_id}/competences]

+ Response 200 (application/json)

    + Body
    
            {
                "data": [
                    {
                        "id" : "1",
                        "local_id": null,
                        "created_at": "2017-06-22T10:12:55+0300",
                        "name" : "Motivation",
                        "vacancy" : {
                            "id" : "58",
                            "name" : "Art-Director"
                        },
                        "view" : {
                            "id" : "2",
                            "name" : "Star"
                        },
                        "level" : {
                            "id" : "3",
                            "name" : "4x",
                            "min_value" : 1,
                            "max_value" : 4
                        },
                        "sort_order" : "1000"
                    },
                    {
                        "id" : "2",
                        "local_id": null,
                        "created_at": "2017-06-22T10:12:55+0300",
                        "name" : "Speach",
                        "vacancy" : {
                            "id" : "58",
                            "name" : "Art-Director"
                        },
                        "view" : {
                            "id" : "2",
                            "name" : "Star"
                        },
                        "level" : {
                            "id" : "3",
                            "name" : "4x",
                            "min_value" : 1,
                            "max_value" : 4
                        },
                        "sort_order" : "1000"
                    },
                    {
                        "id" : "3",
                        "local_id": null,
                        "created_at": "2017-06-22T10:12:55+0300",
                        "name" : "Appearance",
                        "vacancy" : {
                            "id" : "58",
                            "name" : "Art-Director"
                        },
                        "view" : {
                            "id" : "2",
                            "name" : "Star"
                        },
                        "level" : {
                            "id" : "3",
                            "name" : "4x",
                            "min_value" : 1,
                            "max_value" : 4
                        },
                        "sort_order" : "1000"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 3
                }
            }
            
### Retrieve competence [GET /api/1.0/vacancy/{vacancy_id}/competences/{competence_id}]

+ Response 200 (application/json)

    + Body
    
            {
                "data": [
                    {
                        "id" : "1",
                        "local_id": null,
                        "created_at": "2017-06-22T10:12:55+0300",
                        "name" : "Motivation",
                        "vacancy" : {
                            "id" : "58",
                            "name" : "Art-Director"
                        },
                        "view" : {
                            "id" : "2",
                            "name" : "Star"
                        },
                        "level" : {
                            "id" : "3",
                            "name" : "4x",
                            "min_value" : 1,
                            "max_value" : 4
                        },
                        "sort_order" : "1000"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }
            
### Create competences [POST /api/1.0/vacancy/{vacancy_id}/competences]

Creating new competence: vacancy id is specified in url

+ Request (application/json)

        {
            "competences": [
                {
                    "local_id": "e33708b0f",
                    "name" : "Confidence",
                    "view" : {
                        "id" : "2"
                    },
                    "level" : {
                        "id" : "3"
                    }
                }
            ]
        }

+ Response 201 (application/json)

    + Body
    
            {
                "data": [
                    {
                        "id" : "4",
                        "local_id": "e33708b0f",
                        "created_at": "2017-06-22T10:12:55+0300",
                        "name" : "Confidence",
                        "vacancy" : {
                            "id" : "58",
                            "name" : "Art-Director"
                        },
                        "view" : {
                            "id" : "2",
                            "name" : "Star"
                        },
                        "level" : {
                            "id" : "3",
                            "name" : "4x",
                            "min_value" : 1,
                            "max_value" : 4
                        },
                        "sort_order" : "1000"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }
            
### Update competences [PUT /api/1.0/vacancy/{vacancy_id}/competences]

Update competence: id field should be specified in competence prototype

+ Request (application/json)

        {
            "competences": [
                {
                    "id" : "4",
                    "local_id": "e33708b0f",
                    "name" : "Self-confidence",
                    "view" : {
                        "id" : "1"
                    },
                    "level" : {
                        "id" : "4"
                    },
                    "sort_order" : "2000"
                }
            ]
        }

+ Response 200 (application/json)

    + Body
    
            {
                "data": [
                    {
                        "id" : "4",
                        "local_id": "e33708b0f",
                        "created_at": "2017-06-22T10:12:55+0300",
                        "name" : "Self-confidence",
                        "vacancy" : {
                            "id" : "58",
                            "name" : "Art-Director"
                        },
                        "view" : {
                            "id" : "1",
                            "name" : "Circle"
                        },
                        "level" : {
                            "id" : "4",
                            "name" : "5x"
                        },
                        "sort_order" : "2000"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }
            
### Delete competences [DELETE /api/1.0/vacancy/{vacancy_id}/competences]

Delete competence: id field should be specified in competence prototype

+ Request (application/json)

        {
            "competences": [
                {
                    "id" : "4",
                    "local_id": "e33708b0f"
                }
            ]
        }

+ Response 200 (application/json)

    + Body
    
            {
                "data": [
                    {
                        "id" : "4",
                        "local_id": "e33708b0f",
                        "created_at": "2017-06-22T10:12:55+0300",
                        "name" : "Self-confidence",
                        "vacancy" : {
                            "id" : "58",
                            "name" : "Art-Director"
                        },
                        "view" : {
                            "id" : "1",
                            "name" : "Circle"
                        },
                        "level" : {
                            "id" : "4",
                            "name" : "5x"
                        },
                        "sort_order" : "2000"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

## Responses [/api/1.0/responses{?vacancy_id,vacancy_active,status_id,stage_id,sort_by,sort_order,count,page,search_term}]

### Retrieve responses [GET]

+ Parameters
    + vacancy_id (string, `1`) ... Vacancy id
    + status_id (string, `1`) ... Status id
    + stage_id (string, `1`) ... Stage id
    + sort_by (string, `name`) ... Sort name
    + sort_order (string, `asc`) ... Sort direction
    + count (integer, `100`) ... Limit
    + page (integer, `1`) ... Current page number
    + search_term (string, `Fin`) ... Search term
    + vacancy_active (integer, `1`) ... Vacancy active flag 

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "preview_link": "https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/user_male2-512.png",
                    "created_at": "2017-06-22T10:12:55+0300",
                    "is_viewed": false,
                    "vacancy": {
                        "id": "1",
                        "name": "Finance Director"
                    },
                    "candidate": {
                        "name": "John",
                        "surname": "Smith",
                        "gender": "male",
                        "phone": "+1-541-754-3010",
                        "email": "john.smith@gmail.com"
                    },
                    "status": {
                        "id": "2",
                        "name": "Declined"
                    },
                    "star": {
                        "value": 5,
                        "created_at": "2017-08-23T09:26:27-0700"
                    },
                    "stage": {
                        "id": "1",
                        "name": "Voice bot"
                    },
                    "source": {
                        "id": "1",
                        "name": "monster.com"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "How are you?",
                            "video": {
                                "id": "1",
                                "duration": 62,
                                "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                                "text": "I am fine, thanks",
                                "emotions": [
                                    "anger": 0,
                                    "contempt": 0.002,
                                    "disgust": 0,
                                    "fear": 0,
                                    "happiness": 0.021,
                                    "neutral": 0.972,
                                    "sadness": 0.001,
                                    "surprise": 0.002
                                ]
                            }
                        },
                        {
                            "id": "2",
                            "name": "Question 2",
                            "body": "Do you want to work?",
                            "video": {
                                "id": "2",
                                "duration": 15,
                                "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                                "text": "I am fine, thanks"
                            }
                        }
                    ],
                    "comments": [],
                    "voicebot": {
                        "id": "8"
                    },
                    "meta": {
                        "active_process": "schlum"
                    }
                },
                {
                    "id": "2",
                    "preview_link": "https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/user_male2-512.png",
                    "created_at": "2017-06-22T10:15:55+0300",
                    "is_viewed": true,
                    "vacancy": {
                        "id": "2",
                        "name": "Finance Manager"
                    },
                    "candidate": {
                        "name": "William",
                        "surname": "Johnson",
                        "gender": "male",
                        "phone": "+1-541-754-3020",
                        "email": "william.johnson@gmail.com"
                    },
                    "status": {
                        "id": "1",
                        "name": "Approved"
                    },
                    "star": {
                        "value": 4,
                        "created_at": "2017-09-23T09:26:27-0700"
                    },
                    "stage": {
                        "id": "2",
                        "name": "Video interview"
                    },
                    "source": {
                        "id": "1",
                        "name": "monster.com"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "How are you?",
                            "video": {
                                "id": "3",
                                "duration": 8,
                                "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484",
                                "emotions": [
                                    "anger": 0,
                                    "contempt": 0.002,
                                    "disgust": 0,
                                    "fear": 0,
                                    "happiness": 0.021,
                                    "neutral": 0.972,
                                    "sadness": 0.001,
                                    "surprise": 0.002
                                ]
                            }
                        },
                        {
                            "id": "2",
                            "name": "Question 2",
                            "body": "Do you want to work?",
                            "video": null
                        }
                    ],
                    "comments": [
                        {
                            "id": "1",
                            "name": "Very good"
                        }
                    ],
                    "voicebot": null,
                    "meta": {
                        "active_process": null
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }

### Update responses [PUT]

Sends only modified data. Updates only specified fields. The ID field is required for each response.

+ Request (application/json)

        {
            "responses": [
                {
                    "id": "1",
                    "status": {
                        "id": "1"
                    },
                    "stage": {
                        "id": "2"
                    }
                },
                {
                    "id": "2",
                    "status": {
                        "id": "2"
                    }
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "preview_link": "https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/user_male2-512.png",
                        "created_at": "2017-06-22T10:12:55+0300",
                        "is_viewed": false,
                        "vacancy": {
                            "id": "1",
                            "name": "Finance Director"
                        },
                        "candidate": {
                            "name": "John",
                            "surname": "Smith",
                            "gender": "male",
                            "phone": "+1-541-754-3010",
                            "email": "john.smith@gmail.com"
                        },
                        "status": {
                            "id": "1",
                            "name": "Approved"
                        },
                        "star": {
                            "value": 5,
                            "created_at": "2017-08-23T09:26:27-0700"
                        },
                        "stage": {
                            "id": "2",
                            "name": "Video interview"
                        },
                        "source": {
                            "id": "1",
                            "name": "monster.com"
                        },
                        "questions": [
                            {
                                "id": "1",
                                "name": "Question 1",
                                "body": "How are you?",
                                "video": {
                                    "id": "1",
                                    "duration": 62,
                                    "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                                    "text": "I am fine, thanks",
                                    "emotions": []
                                }
                            },
                            {
                                "id": "2",
                                "name": "Question 2",
                                "body": "Do you want to work?",
                                "video": {
                                    "id": "2",
                                    "duration": 15,
                                    "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                                    "text": "I am fine, thanks",
                                    "emotions": []
                                }
                            }
                        ],
                        "comments": [],
                        "voicebot": {
                            "id": "8"
                        }
                    },
                    {
                        "id": "2",
                        "preview_link": "https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/user_male2-512.png",
                        "created_at": "2017-06-22T10:15:55+0300",
                        "is_viewed": true,
                        "vacancy": {
                            "id": "2",
                            "name": "Finance Manager"
                        },
                        "candidate": {
                            "name": "William",
                            "surname": "Johnson",
                            "gender": "male",
                            "phone": "+1-541-754-3020",
                            "email": "william.johnson@gmail.com"
                        },
                        "status": {
                            "id": "2",
                            "name": "Declined"
                        },
                        "star": {
                            "value": 5,
                            "created_at": "2017-08-23T09:26:27-0700"
                        },
                        "stage": {
                            "id": "2",
                            "name": "Video interview"
                        },
                        "source": {
                            "id": "1",
                            "name": "monster.com"
                        },
                        "questions": [
                            {
                                "id": "1",
                                "name": "Question 1",
                                "body": "How are you?",
                                "video": {
                                    "id": "3",
                                    "duration": 8,
                                    "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                                    "text": "I am fine, thanks",
                                    "emotions": [
                                        "anger": 0,
                                        "contempt": 0.002,
                                        "disgust": 0,
                                        "fear": 0,
                                        "happiness": 0.021,
                                        "neutral": 0.972,
                                        "sadness": 0.001,
                                        "surprise": 0.002
                                    ]
                                }
                            },
                            {
                                "id": "2",
                                "name": "Question 2",
                                "body": "Do you want to work?",
                                "video": null,
                                "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484",
                                "emotions": []
                            }
                        ],
                        "comments": [
                            {
                                "id": "1",
                                "name": "Very good"
                            }
                        ],
                        "voicebot": null
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 0,
                    "total": 0
                }
            }

### Delete responses [DELETE]

The ID field is required for each response.

+ Request (application/json)

        {
            "responses": [
                {
                    "id": "1"
                },
                {
                    "id": "2"
                }
            ]
        }

+ Response 204 (application/json)



## Response [/api/1.0/responses/{response_id}]

+ Parameters
    + response_id (required, string, `1`) ... Response id

### Retrieve response [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "preview_link": "https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/user_male2-512.png",
                    "created_at": "2017-06-22T10:12:55+0300",
                    "is_viewed": false,
                    "vacancy": {
                        "id": "1",
                        "name": "Finance Director"
                    },
                    "candidate": {
                        "name": "John",
                        "surname": "Smith",
                        "gender": "male",
                        "phone": "+1-541-754-3010",
                        "email": "john.smith@gmail.com"
                    },
                    "status": {
                        "id": "1",
                        "name": "Approved"
                    },
                    "star": {
                        "value": 5,
                        "created_at": "2017-08-23T09:26:27-0700"
                    },
                    "stage": {
                        "id": "2",
                        "name": "Video interview"
                    },
                    "source": {
                        "id": "1",
                        "name": "monster.com"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "How are you?",
                            "video": {
                                "id": "1",
                                "duration": 62,
                                "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484",
                                "text": "I am fine, thanks",
                                "emotions": {
                                    "anger": 0,
                                    "contempt": 0.002,
                                    "disgust": 0,
                                    "fear": 0,
                                    "happiness": 0.021,
                                    "neutral": 0.972,
                                    "sadness": 0.001,
                                    "surprise": 0.002
                                }
                            }
                        },
                        {
                            "id": "2",
                            "name": "Question 2",
                            "body": "Do you want to work?",
                            "video": {
                                "id": "2",
                                "duration": 15,
                                "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484",
                                "text": "No, work sux",
                                "emotions": {
                                    "anger": 0,
                                    "contempt": 0.002,
                                    "disgust": 0,
                                    "fear": 0,
                                    "happiness": 0.021,
                                    "neutral": 0.972,
                                    "sadness": 0.001,
                                    "surprise": 0.002
                                }                                
                            }
                        }
                    ],
                    "comments": [],
                    "voicebot": {
                        "id": "8"
                    },
                    "meta": {
                        "active_process": "schlum"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 0,
                "total": 0
            }
        }




## Public response [/api/1.0/public-responses/{response_token}]

Retrieve response. Method is public

+ Parameters
    + response_token (required, string, `e4beb9e11cc7b678760a93e8321ecf10`) ... Response token

### Retrieve response [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "preview_link": "https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/user_male2-512.png",
                    "created_at": "2017-06-22T10:12:55+0300",
                    "is_viewed": false,
                    "vacancy": {
                        "id": "1",
                        "name": "Finance Director"
                    },
                    "candidate": null,
                    "status": null,
                    "star": {
                        "value": 5,
                        "created_at": "2017-08-23T09:26:27-0700"
                    },
                    "stage": {
                        "id": "2",
                        "name": "Video interview"
                    },
                    "source": null,
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "How are you?",
                            "video": {
                                "id": "1",
                                "duration": 62,
                                "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                                "text": "I am fine, thanks",
                                "emotions": [
                                    "anger": 0,
                                    "contempt": 0.002,
                                    "disgust": 0,
                                    "fear": 0,
                                    "happiness": 0.021,
                                    "neutral": 0.972,
                                    "sadness": 0.001,
                                    "surprise": 0.002
                                ]
                            }
                        },
                        {
                            "id": "2",
                            "name": "Question 2",
                            "body": "Do you want to work?",
                            "video": {
                                "id": "2",
                                "duration": 15,
                                "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                                "text": "No, work sux",
                                "emotions": [
                                    "anger": 0,
                                    "contempt": 0.002,
                                    "disgust": 0,
                                    "fear": 0,
                                    "happiness": 0.021,
                                    "neutral": 0.972,
                                    "sadness": 0.001,
                                    "surprise": 0.002
                                ]                                
                            }
                        }
                    ],
                    "comments": [],
                    "voicebot": {
                        "id": "8"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 0,
                "total": 0
            }
        }




## Create responses for public vacancy [/api/1.0/public-vacancies/{vacancy_token}/responses]

### Create responses [POST]

+ Parameters
    + vacancy_token (string, `c5ed975f`) ... Vacancy token

+ Request (application/json)

        {
            "responses": [
                {
                    "candidate": {
                        "name": "John",
                        "surname": "Johnson",
                        "email": "john.johnson@gmail.com",
                        "phone": "+1-541-754-3010"
                    }
                }
            ]
        }

+ Response 201 (application/json)

        {
            "data": [
                {
                    "token": "a3c0783b",
                    "resume_url": "https://s3.eu-central-1.amazonaws.com/ru.vcv.sber.static/127.0.0.1/responses/1700/resumes/resume.docx",
                    "created_at": "2017-11-10T04:12:29-0800",
                    "vacancy": {
                        "token": "41ea619a",
                        "name": "Product Manager"
                    },
                    "interview": {
                        "token": "2990b565"
                    },
                    "candidate": {
                        "name": "John",
                        "surname": "Johnson",
                        "second_name": "",
                        "gender": null,
                        "phone": "+1-541-754-3010",
                        "email": "john.johnson@gmail.com"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }




## Create response resume for public vacancy [/api/1.0/public-vacancies/{vacancy_token}/responses/{response_token}/resume]

+ Parameters
    + vacancy_token (string, `c5ed975f`) ... Vacancy token
    + response_token (string, `a3c0783b`) ... Response token

### Save resume [POST]

If resume_url is higher priority then resume

+ Request (multipart/form-data;boundary=---BOUNDARY)
    + Body

            ---BOUNDARY
            Content-Disposition: form-data; name="resume"; filename="resume.docx"
            Content-Type: application/msword
            
            Content-Disposition: form-data; name="resume_url"
            https://s3-eu-west-1.amazonaws.com/new.vcv.ru/new.vcv.ru/responses/493/resumes/resume.docx

            data
            ---BOUNDARY--
        
+ Response 201 (application/json)

            {
                "data": [
                    {
                        "token": "a3c0783b",
                        "resume_url": "https://s3.eu-central-1.amazonaws.com/ru.vcv.sber.static/127.0.0.1/responses/1700/resumes/resume.docx",
                        "created_at": "2017-11-10T04:12:29-0800",
                        "vacancy": {
                            "token": "41ea619a",
                            "name": "Product Manager"
                        },
                        "interview": {
                            "token": "2990b565"
                        },
                        "candidate": {
                            "name": "John",
                            "surname": "Johnson",
                            "second_name": "",
                            "gender": null,
                            "phone": "+1-541-754-3010",
                            "email": "john.johnson@gmail.com"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }





## Response comments [/api/1.0/responses/{response_id}/comments]

+ Parameters
    + response_id (required, string, `1`) ... Response id

### Retrieve comments [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "2",
                    "created_at": "2017-06-20T10:12:55+0300",
                    "message": "Very, very bad",
                    "user": {
                        "id": "1",
                        "name": "John",
                        "surname": "Johnson"
                    }
                },
                {
                    "id": "1",
                    "created_at": "2017-06-22T10:12:55+0300",
                    "message": "Very, very good",
                    "user": {
                        "id": "1",
                        "name": "John",
                        "surname": "Johnson"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }

### Create new comments [POST]

+ Request (application/json)

        {
            "comments": [
                {
                    "message": "Excellent!"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "created_at": "2017-06-22T10:12:55+0300",
                        "message": "Excellent!",
                        "user": {
                            "name": "John",
                            "surname": "Johnson"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

### Update comments [PUT]

Sends only modified data. Updates only specified fields. The ID field is required for each comment.

+ Request (application/json)

        {
            "comments": [
                {
                    "id": "1",
                    "message": "Very well!"
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "created_at": "2017-06-22T10:12:55+0300",
                        "message": "Very well!",
                        "user": {
                            "name": "John",
                            "surname": "Johnson"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 0,
                    "total": 0
                }
            }

### Delete comments [DELETE]

The ID field is required for each comment.

+ Request (application/json)

        {
            "comments": [
                {
                    "id": "1"
                }
            ]
        }

+ Response 204 (application/json)




## Response stars [/api/1.0/responses/{response_id}/stars]

+ Parameters
    + response_id (required, string, `1`) ... Response id

### Retrieve stars [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "created_at": "2017-06-20T10:12:55+0300",
                    "value": 5
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }

### Update stars [PUT]

+ Request (application/json)

        {
            "stars": [
                {
                    "value": 4
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "created_at": "2017-06-20T10:12:55+0300",
                        "value": 4
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 0,
                    "total": 0
                }
            }


## Response competence [/api/1.0/responses/{response_id}/competences]

### Retrieve competences [GET]

Get list of competences related to response. 

+ Response 200 (application/json)

    + Body
    
            {
                "data": [
                    {
                        "competences" : [
                            {
                                "id" : "122",
                                "response" : {
                                    "id" : "{response_id}"
                                },
                                "name" : "Motivation",
                                "value" : null,
                                "view" : {
                                    "id" : "2",
                                    "name" : "Star"
                                },
                                "level" : {
                                    "id" : "3",
                                    "name" : "4x",
                                    "min_value" : 1,
                                    "max_value" : 4
                                },
                                "sort_order" : "1000"
                            },
                            {
                                "id" : "123",
                                "response" : {
                                    "id" : "{response_id}"
                                },
                                "name" : "Speach",
                                "value" : 2,
                                "view" : {
                                    "id" : "2",
                                    "name" : "Star"
                                },
                                "level" : {
                                    "id" : "3",
                                    "name" : "4x",
                                    "min_value" : 1,
                                    "max_value" : 4
                                },
                                "sort_order" : "1000"
                            },
                            {
                                "id" : "123",
                                "response" : {
                                    "id" : "{response_id}"
                                },
                                "created_at": "2017-06-22T10:12:55+0300",
                                "name" : "Appearance",
                                "value" : 3,
                                "view" : {
                                    "id" : "2",
                                    "name" : "Star"
                                },
                                "level" : {
                                    "id" : "3",
                                    "name" : "4x",
                                    "min_value" : 1,
                                    "max_value" : 4
                                },
                                "sort_order" : "1000"
                            }
                        ],
                        "overall_rating" : 2.5
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }
            
### Update competences [PUT]

Set competence value for response. Value should be a number in a range of [level.min_value, level.max_value]
Result response equal to "Retreive competence" method. Ccontains all competence of response, not only updated; with new value of overall_rating.
 

+ Request (application/json)

            {
                "competences" : [
                    {
                        "id" : "122",
                        "value" : 4
                    }
                ]
            }


+ Response 200 (application/json)

    + Body
    
            {
                "data": [
                    {
                        "competences" : [
                            {
                                "id" : "122",
                                "response" : {
                                    "id" : "{response_id}"
                                },
                                "name" : "Motivation",
                                "value" : 4,
                                "view" : {
                                    "id" : "2",
                                    "name" : "Star"
                                },
                                "level" : {
                                    "id" : "3",
                                    "name" : "4x",
                                    "min_value" : 1,
                                    "max_value" : 4
                                },
                                "sort_order" : "1000"
                            },
                            {
                                "id" : "123",
                                "response" : {
                                    "id" : "{response_id}"
                                },
                                "name" : "Speach",
                                "value" : 2,
                                "view" : {
                                    "id" : "2",
                                    "name" : "Star"
                                },
                                "level" : {
                                    "id" : "3",
                                    "name" : "4x",
                                    "min_value" : 1,
                                    "max_value" : 4
                                },
                                "sort_order" : "1000"
                            },
                            {
                                "id" : "123",
                                "response" : {
                                    "id" : "{response_id}"
                                },
                                "created_at": "2017-06-22T10:12:55+0300",
                                "name" : "Appearance",
                                "value" : 3,
                                "view" : {
                                    "id" : "2",
                                    "name" : "Star"
                                },
                                "level" : {
                                    "id" : "3",
                                    "name" : "4x",
                                    "min_value" : 1,
                                    "max_value" : 4
                                },
                                "sort_order" : "1000"
                            }
                        ],
                        "overall_rating" : 3
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }



## Public response competence [/api/1.0/public-responses/{response_token}/competences]

+ Parameters
    + response_token (required, string, `e4beb9e11cc7b678760a93e8321ecf10`) ... Response token

### Retrieve competences [GET]

Get list of competences related to response. Method is public

+ Response 200 (application/json)

    + Body
    
            {
                "data": [
                    {
                        "competences" : [
                            {
                                "id" : "122",
                                "response" : {
                                    "id" : "{response_id}"
                                },
                                "name" : "Motivation",
                                "value" : null,
                                "view" : {
                                    "id" : "2",
                                    "name" : "Star"
                                },
                                "level" : {
                                    "id" : "3",
                                    "name" : "4x",
                                    "min_value" : 1,
                                    "max_value" : 4
                                },
                                "sort_order" : "1000"
                            },
                            {
                                "id" : "123",
                                "response" : {
                                    "id" : "{response_id}"
                                },
                                "name" : "Speach",
                                "value" : 2,
                                "view" : {
                                    "id" : "2",
                                    "name" : "Star"
                                },
                                "level" : {
                                    "id" : "3",
                                    "name" : "4x",
                                    "min_value" : 1,
                                    "max_value" : 4
                                },
                                "sort_order" : "1000"
                            },
                            {
                                "id" : "123",
                                "response" : {
                                    "id" : "{response_id}"
                                },
                                "created_at": "2017-06-22T10:12:55+0300",
                                "name" : "Appearance",
                                "value" : 3,
                                "view" : {
                                    "id" : "2",
                                    "name" : "Star"
                                },
                                "level" : {
                                    "id" : "3",
                                    "name" : "4x",
                                    "min_value" : 1,
                                    "max_value" : 4
                                },
                                "sort_order" : "1000"
                            }
                        ],
                        "overall_rating" : 2.5
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }




## Response voicebot [/api/1.0/responses/{response_id}/voicebot]

### Retrieve response voicebot data [GET]

Get response voicebot questions and source: file == null if voceicebot is not recorded yet
When it will be possible to store answer in separate file, api will be changes a little

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id" : "1",    
                    "response" : {
                        "id" : "{response_id}"
                    },
                    "file" : {
                        "duration" : 120,
                        "source" : "path to full voicebot conversation file"
                    },
                    "questions" : [
                        {
                            "id" : "1",
                            "name" : "Question 1",
                            "body" : "Hi! I am robot recruiter VCV. I am calling you regarding the open position at The Coca-Cola Company. Is it convenient for you to talk now? Say \"yes\" or \"no\"."
                        },
                        {
                            "id" : "2",
                            "name" : "Question 2",
                            "body" : "Great. Are you looking for a job at the moment? Say \"yes\" or \"no\"."
                        },
                        {
                            "id" : "3",
                            "name" : "Question 3",
                            "body" : "Good. Let me please ask you some questions before I tell you about the position. Are you living in New York now? Say \"yes\" or \"no\"."
                        },
                        {
                            "id" : "4",
                            "name" : "Question 4",
                            "body" : "Ok, I got it. Let me tell you some words about the position. It is Sales Manager position in New York. Your functions will be client attraction, interesting negotiations with clients and budget planning. Coca Cola gives many opportunities for your professional development, challenging goals, dynamic business, and bright team. We are waiting for active, positive and flexible candidates, who can find a common language with everybody and can overcome obstacles. Are you interested in such position? Say \"yes\" or \"no\"."
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }

## Response test [/api/1.0/responses/{response_id}/test]

### Retrieve response test data [GET]

Get response test questions and answers

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1162",
                    "vacancy": {
                        "id": "218"
                    },
                    "questions": [
                        {
                            "id": "34",
                            "name": "",
                            "body": " Вопрос 1",
                            "type": "choice",
                            "priority": 10000,
                            "answers": [
                                {
                                    "id": "109",
                                    "body": " Ответ 1",
                                    "is_valid": true,
                                    "is_chosen": false,
                                    "priority": 10000
                                },
                                {
                                    "id": "110",
                                    "body": "  Ответ 2",
                                    "is_valid": false,
                                    "is_chosen": false,
                                    "priority": 10000
                                },
                                {
                                    "id": "111",
                                    "body": "  Ответ 3",
                                    "is_valid": false,
                                    "is_chosen": false,
                                    "priority": 10000
                                },
                                {
                                    "id": "112",
                                    "body": "  Ответ 4",
                                    "is_valid": false,
                                    "is_chosen": true,
                                    "priority": 10000
                                }
                            ]
                        },
                        {
                            "id": "33",
                            "name": "",
                            "body": " Вопрос 2",
                            "type": "choice",
                            "priority": 10000,
                            "answers": [
                                {
                                    "id": "105",
                                    "body": " ответ1",
                                    "is_valid": true,
                                    "is_chosen": true,
                                    "priority": 10000
                                },
                                {
                                    "id": "106",
                                    "body": "ответ2",
                                    "is_valid": false,
                                    "is_chosen": false,
                                    "priority": 10000
                                },
                                {
                                    "id": "107",
                                    "body": "ответ3",
                                    "is_valid": false,
                                    "is_chosen": false,
                                    "priority": 10000
                                },
                                {
                                    "id": "108",
                                    "body": "ответ4",
                                    "is_valid": false,
                                    "is_chosen": false,
                                    "priority": 10000
                                }
                            ]
                        },
                        {
                            "id": "32",
                            "name": "",
                            "body": " Вопрос на логику",
                            "type": "choice",
                            "priority": 10000,
                            "answers": [
                                {
                                    "id": "103",
                                    "body": " правильный",
                                    "is_valid": true,
                                    "is_chosen": false,
                                    "priority": 10000
                                },
                                {
                                    "id": "104",
                                    "body": " неправильный",
                                    "is_valid": false,
                                    "is_chosen": false,
                                    "priority": 10000
                                }
                            ]
                        }
                    ]
                }
            ],
            "meta": {
                "id": "5a96c73375de7",
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }
        
## Response videointerview [/api/1.0/responses/{response_id}/videointerview]

### Retrieve response videointerview [GET]

Get response videointerview questions and source

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id" : "{response_id}",     
                    "response" : {
                        "id" : "{response_id}"
                    },
                    "questions": [
                        {
                          "id": "1",
                          "name": "Question 1",
                          "body": "How are you?",
                          "video": {
                            "id": "1",
                            "duration": 62,
                            "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                            "text": "I am fine, thanks",
                            "emotions": [
                                "anger": 0,
                                "contempt": 0.002,
                                "disgust": 0,
                                "fear": 0,
                                "happiness": 0.021,
                                "neutral": 0.972,
                                "sadness": 0.001,
                                "surprise": 0.002
                            ]
                          },
                          "priority": 1000
                        },
                        {
                          "id": "2",
                          "name": "Question 2",
                          "body": "Do you want to work?",
                          "video": {
                            "id": "2",
                            "duration": 15,
                            "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                            "text": "I am fine, thanks",
                            "emotions":[]
                          },
                          "priority": 2000
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }



## Response statuses dictionary [/api/1.0/response-statuses{?vacancy_id}]

+ Parameters
    + vacancy_id (string, `1`, optional) ... Vacancy id

### Retrieve statuses [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "name": "Approved",
                    "is_base": true,
                    "is_hidden": false,
                    "priority": 10000,
                    "on_top": true,
                    "color": "FF00FF",
                    "has_responses": true,
                    "responses_count": 0
                },
                {
                    "id": "2",
                    "name": "Declined",
                    "is_base": true,
                    "is_hidden": false,
                    "priority": 10100,
                    "on_top": true,
                    "color": null,
                    "has_responses": false,
                    "responses_count": 10
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }


### Create new statuses [POST]

+ Request (application/json)

        {
            "statuses": [
                {
                    "name": "New",
                    "priority": 20000,
                    "on_top": false,
                    "color": "FF00FF"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "3",
                        "name": "New",
                        "is_base": false,
                        "is_hidden": false,
                        "priority": 20000,
                        "on_top": false,
                        "color": "FF00FF"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

### Update statuses [PUT]

The ID field is required for each status.

+ Request (application/json)

        {
            "statuses": [
                {
                    "id": "3",
                    "name": "Created",
                    "priority": 20000,
                    "on_top": false,
                    "color": "FF00FF"
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "3",
                        "name": "Created",
                        "is_base": false,
                        "is_hidden": false,
                        "priority": 20000,
                        "on_top": false,
                        "color": "FF00FF"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }
### Delete statuses [DELETE]

The ID field is required for each status.

+ Request (application/json)

        {
            "statuses": [
                {
                    "id": "3"
                }
            ]
        }

+ Response 204 (application/json)



## Response statuses by response [/api/1.0/responses/{response_id}/statuses]

+ Parameters
    + response_id (required, string, `1`) ... Response id

### Retrieve statuses [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "3",
                    "is_base": false,
                    "is_hidden": false,
                    "priority": 130,
                    "color": null,
                    "on_top": true,
                    "has_responses": true,
                    "responses_count": 1,
                    "name": "Invited"
                },
                {
                    "id": "4",
                    "is_base": false,
                    "is_hidden": false,
                    "priority": 140,
                    "color": null,
                    "on_top": true,
                    "has_responses": true,
                    "responses_count": 4,
                    "name": "Refused"
                }
            ],
            "meta": {
                "id": "5afc2acd7c8e2",
                "error": null,
                "page": 1,
                "total": 2
            }
        }




## Response links [/api/1.0/response-links]

### Create new links [POST]

+ Request (application/json)

        {
            "links": [
                {
                    "subject": "Subject 1",
                    "body": "Hello",
                    "response": {
                        "id": "1"
                    },
                    "user": {
                        "email": "john@gmail.com"
                    },
                    "signature": "Best regards, William"
                },
                {
                    "subject": "Subject 2",
                    "body": "Hello 2",
                    "response": {
                        "id": "2"
                    },
                    "user": {
                        "email": "john@gmail.com"
                    },
                    "signature": "Best regards, William"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "response": {
                            "id": "1"
                        },
                        "user": {
                            "email": "john@gmail.com"
                        }
                    },
                    {
                        "id": "2",
                        "response": {
                            "id": "2"
                        },
                        "user": {
                            "email": "john@gmail.com"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }


### Delete links [DELETE]

The ID field is required for each link.

+ Request (application/json)

        {
            "links": [
                {
                    "id": "3"
                }
            ]
        }

+ Response 204 (application/json)




## Response candidate emails [/api/1.0/response-candidate-emails]

### Create new emails [POST]

+ Request (application/json)

        {
            "emails": [
                {
                    "subject": "Subject 1",
                    "body": "Hello",
                    "response": {
                        "id": "1"
                    },
                    "email": "john@gmail.com"
                },
                {
                    "subject": "Subject 2",
                    "body": "Hello 2",
                    "response": {
                        "id": "2"
                    },
                    "email": "john@gmail.com"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "response": {
                            "id": "1"
                        },
                        "email": "john@gmail.com"
                    },
                    {
                        "id": "2",
                        "response": {
                            "id": "2"
                        },
                        "email": "john@gmail.com"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }





## Response stages [/api/1.0/response-stages?{vacancy_id}]

### Retrieve stages [GET]

+ Parameters
    + vacancy_id (required, string, `1`) ... Vacancy id

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "name": "Voice bot"
                },
                {
                    "id": "2",
                    "name": "Video interview"
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }

## Response xls file [/api/1.0/responses/report/xls{?vacancy_id,status_id,ids}]

### Retrieve response xls file url [GET]

+ Parameters
    + vacancy_id (string, `1`, optional) ... Vacancy id
    + status_id (string, `1`, optional) ... Status id
    + ids (array, ``, optional) ... GET array of response ids to export: ids[]=1&ids[]=34
    
+ Response 200 (application/json)

        {
            "data": [
                {
                    "url": "https://s3.eu-central-1.amazonaws.com/ ... /report_f89a347295b23d5d863fc3a972e62637.xls"
                }
            ],
            "meta": {
                "error": null,
                "page": 0,
                "total": 0
            }
        }



## Invites [/api/1.0/invites{?vacancy_id,status_id,response_status_id,token,force,search_term}]

### Retrieve invites [GET]

+ Parameters
    + vacancy_id (string, `1`) ... Vacancy id
    + status_id (string, `1`) ... Status id
    + response_status_id (string, `1`) ... Status id of reponse
    + token (string, `5966314500f31`) ... Token
    + search_term (string, `test`) ... Search term

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "created_at": "2017-06-22T10:12:55+0300",
                    "vacancy": {
                        "id": "1",
                        "name": "Finance Director"
                    },
                    "candidate": {
                        "name": "John",
                        "surname": "Smith",
                        "gender": "male",
                        "phone": "+1-541-754-3010",
                        "email": "john.smith@gmail.com"
                    },
                    "response": {
                        "id": "1",
                        "created_at": "2018-01-10T01:55:03-0800"
                    },
                    "status": {
                        "id": "2",
                        "name": "Sent"
                    }
                },
                {
                    "id": "2",
                    "created_at": "2017-06-22T10:12:56+0300",
                    "vacancy": {
                        "id": "2",
                        "name": "Finance Manager"
                    },
                    "candidate": {
                        "name": "William",
                        "surname": "Johnson",
                        "gender": "male",
                        "phone": "+1-541-754-3011",
                        "email": "william.johnson@gmail.com"
                    },
                    "response": {
                        "id": "1",
                        "created_at": "2018-01-10T01:55:03-0800"
                    },
                    "status": {
                        "id": "1",
                        "name": "New"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }

### Create new invites [POST]

+ Parameters
    + force (integer, `1`) ... Force send invites

+ Request (application/json)

        {
            "invites": [
                {
                    "vacancy": {
                        "id": "1"
                    },
                    "candidate": {
                        "name": "John",
                        "surname": "Smith",
                        "gender": "male",
                        "phone": "+1-541-754-3010",
                        "email": "john.smith@gmail.com"
                    }
                },
                {
                    "vacancy": {
                        "id": "2"
                    },
                    "candidate": {
                        "name": "William",
                        "surname": "Johnson",
                        "gender": "male",
                        "phone": "+1-541-754-3011",
                        "email": "william.johnson@gmail.com"
                    }
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "created_at": "2017-06-22T10:12:55+0300",
                        "vacancy": {
                            "id": "1",
                            "name": "Finance Director"
                        },
                        "candidate": {
                            "name": "John",
                            "surname": "Smith",
                            "gender": "male",
                            "phone": "+1-541-754-3010",
                            "email": "john.smith@gmail.com"
                        },
                        "status": {
                            "id": "2",
                            "name": "Sent"
                        }
                    },
                    {
                        "id": "2",
                        "created_at": "2017-06-22T10:12:56+0300",
                        "vacancy": {
                            "id": "2",
                            "name": "Finance Manager"
                        },
                        "candidate": {
                            "name": "William",
                            "surname": "Johnson",
                            "gender": "male",
                            "phone": "+1-541-754-3011",
                            "email": "william.johnson@gmail.com"
                        },
                        "status": {
                            "id": "1",
                            "name": "New"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }

### Update invites [PUT]

Sends only modified data. Updates only specified fields. The ID field is required for each invite.

+ Request (application/json)

        {
            "invites": [
                {
                    "id": "1",
                    "status": {
                        "id": "1"
                    }
                },
                {
                    "id": "2",
                    "status": {
                        "id": "2"
                    }
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "created_at": "2017-06-22T10:12:55+0300",
                        "vacancy": {
                            "id": "1",
                            "name": "Finance Director"
                        },
                        "candidate": {
                            "name": "John",
                            "surname": "Smith",
                            "gender": "male",
                            "phone": "+1-541-754-3010",
                            "email": "john.smith@gmail.com"
                        },
                        "response": {
                            "id": "1",
                            "created_at": "2018-01-10T01:55:03-0800"
                        },
                        "status": {
                            "id": "1",
                            "name": "New"
                        }
                    },
                    {
                        "id": "2",
                        "created_at": "2017-06-22T10:12:56+0300",
                        "vacancy": {
                            "id": "2",
                            "name": "Finance Manager"
                        },
                        "candidate": {
                            "name": "William",
                            "surname": "Johnson",
                            "gender": "male",
                            "phone": "+1-541-754-3011",
                            "email": "william.johnson@gmail.com"
                        },
                        "response": {
                            "id": "1",
                            "created_at": "2018-01-10T01:55:03-0800"
                        },
                        "status": {
                            "id": "2",
                            "name": "Sent"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 0,
                    "total": 0
                }
            }



## Express invites [/api/1.0/express-invites]

### Create new express invites [POST /api/1.0/express-invites]

+ Request (application/json)

        {
            "invites": [
                {
                    "vacancy": {
                        "id": "1"
                    },
                    "candidate": {
                        "name": "John",
                        "phone": "+1-541-754-3010",
                        "email": "john.smith@gmail.com"
                    },
                    "stage": {
                        "id": 5
                    }
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "created_at": "2017-06-22T10:12:55+0300",
                        "vacancy": {
                            "id": "1",
                            "name": "Finance Director"
                        },
                        "candidate": {
                            "name": "John",
                            "surname": "",
                            "gender": "",
                            "phone": "+1-541-754-3010",
                            "email": "john.smith@gmail.com"
                        },
                        "status": {
                            "id": "2",
                            "name": "Sent"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }



## Invite [/api/1.0/invites/{invite_id}]

+ Parameters
    + invite_id (required, string, `1`) ... Invite id

### Retrieve invite [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "created_at": "2017-06-22T10:12:55+0300",
                    "vacancy": {
                        "id": "1",
                        "name": "Finance Director"
                    },
                    "candidate": {
                        "name": "John",
                        "surname": "Smith",
                        "gender": "male",
                        "phone": "+1-541-754-3010",
                        "email": "john.smith@gmail.com"
                    },
                    "response": {
                        "id": "1",
                        "created_at": "2018-01-10T01:55:03-0800"
                    },
                    "status": {
                        "id": "2",
                        "name": "Sent"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 0,
                "total": 0
            }
        }
        
        
        
        
## Invite statuses dictionary [/api/1.0/invite-statuses]

### Retrieve statuses [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "name": "Sent"
                },
                {
                    "id": "2",
                    "name": "Visited"
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }

## Invite xls file [/api/1.0/invites/report/xls{?vacancy_id,status_id}]

### Retrieve invite xls file url [GET]

+ Parameters
    + vacancy_id (string, `1`, optional) ... Vacancy id
    + status_id (string, `1`, optional) ... Status id

+ Response 200 (application/json)

        {
            "data": [
                {
                    "url": "https://s3.eu-central-1.amazonaws.com/ ... /report_f89a347295b23d5d863fc3a972e62637.xls"
                }
            ],
            "meta": {
                "error": null,
                "page": 0,
                "total": 0
            }
        }





## Retrieve invites from excel file [/api/1.0/invites-from-xls]

### Transform invites [POST]

+ Request (multipart/form-data;boundary=---BOUNDARY)
    + Body

            ---BOUNDARY
            Content-Disposition: form-data; name="sources[]"; filename="send_interview_example.xls"
            Content-Type: application/vnd.ms-excel

            data
            ---BOUNDARY--
        
+ Response 201 (application/json)

        {
            "data": [
                {
                    "candidate": {
                        "email": "john.one@gmail.com",
                        "name": "John",
                        "surname": "One",
                        "phone": 79999999999
                    }
                },
                {
                    "candidate": {
                        "email": "john.second@gmail.com",
                        "name": "John",
                        "surname": "Second",
                        "phone": 79999999998
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }        
        
        


## Calls [/api/1.0/calls]

### Create new calls [POST]

+ Request (application/json)

        {
            "calls": [
                {
                    "phone": "+1-541-754-3010"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "phone": "+1-541-754-3010",
                        "status": {
                            "id": "1",
                            "name": "Created"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }




## Call [/api/1.0/calls/{call_id}]

+ Parameters
    + call_id (required, string, `1`) ... Call id

### Retrieve call [GET]

+ Response 200 (application/json)

            {
                "data": [
                    {
                        "id": "1",
                        "phone": "+1-541-754-3010",
                        "status": {
                            "id": "1",
                            "name": "Created"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }




## Access tokens [/api/1.0/access-tokens]

### Create new access tokens [POST]

+ Request (application/json)

        {
            "users": [
                {
                    "email": "john@gmail.com",
                    "password": "j0H#"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "token": "5966314500f31",
                        "expired_at": "2017-09-22T10:12:55+0300",
                        "user": {
                            "name": "John",
                            "surname": "Johnson",
                            "email": "john@gmail.com",
                            "gender": "male",
                            "created_at": "2017-01-02T10:12:55+0300"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

### Delete access tokens [DELETE]

The TOKEN field is required for each acceess-token.

+ Request (application/json)

        {
            "access_tokens": [
                {
                    "token": "5966314500f31"
                }
            ]
        }

+ Response 204 (application/json)




## Access tokens by user [/api/1.0/user-access-tokens/{email}]

For authorized admin user only

+ Parameters
    + email (string, `gl@vcv.ru`)

### Create new access token by user [POST]

+ Request (application/json)


+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "token": "5966314500f31",
                        "expired_at": "2017-09-22T10:12:55+0300",
                        "user": {
                            "name": "John",
                            "surname": "Johnson",
                            "email": "john@gmail.com",
                            "gender": "male",
                            "created_at": "2017-01-02T10:12:55+0300"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }




## Authorization token [/api/1.0/access-tokens/authorization]

### Retrieve token [GET]

Requested once

+ Request
    + Headers

            Authorization: (Token)

+ Response 200 (application/json)

            {
                "data": [
                    {
                        "token": "5966314500f31",
                        "expired_at": "2017-09-22T10:12:55+0300",
                        "user": {
                            "name": "John",
                            "surname": "Johnson",
                            "email": "john@gmail.com",
                            "gender": "male",
                            "created_at": "2017-01-02T10:12:55+0300"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }




## Password recovery token [/api/1.0/access-tokens/password-recovery]

### Retrieve token [GET]

+ Request
    + Headers

            Authorization: (Token)

+ Response 200 (application/json)

            {
                "data": [
                    {
                        "token": "5966314500f31",
                        "expired_at": "2017-09-22T10:12:55+0300",
                        "user": {
                            "email": "john@gmail.com"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

### Create new tokens [POST]

+ Request (application/json)

        {
            "users": [
                {
                    "email": "john@gmail.com"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "expired_at": "2017-09-22T10:12:55+0300",
                        "user": {
                            "email": "john@gmail.com"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }




## User passwords [/api/1.0/user-passwords]

### Update passwords [PUT]

The PASSWORD field is required for each user.

+ Request (application/json)

        {
            "users": [
                {
                    "password": "j0H#"
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "email": "john@gmail.com"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }




## Users [/api/1.0/users]

### Retrieve users [GET /api/1.0/users?{company_id}]

For authorized admin users only

+ Parameters
    + company_id (required, string, `1`) ... Company id

+ Response 200 (application/json)

            {
                "data": [
                    {
                        "name": "John",
                        "surname": "Johnson",
                        "email": "john@gmail.com",
                        "phone": "+1-541-754-3010",
                        "skype": "skype_login",
                        "position": "director",
                        "logo": null,
                        "company": {
                            "id": "1",
                            "name": "Coca-Cola"
                        },
                        "geo": {
                            "id": "3",
                            "formatted_address": "Buenos Aires, Nay., Mexico",
                            "description": "Buenos Aires, Mexico",
                            "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI"
                        },
                        "roles": [
                            {
                                "id": "1",
                                "name": "Admin",
                                "role": "ROLE_ADMIN"
                            }
                        ]                        
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }



### Create new users [POST]

roles field is required, list of all available roles while creating can be get by api method.
only one role is required and allowed

+ Request (application/json)

        {
            "users": [
                {
                    "name": "John",
                    "surname": "Johnson",
                    "email": "john@gmail.com",
                    "phone": "+1-541-754-3010",
                    "skype": "skype_login",
                    "position": "director",
                    "company": {
                        "id": "1",
                        "name": "Coca-Cola"
                    },
                    "roles": [
                        {
                            "id": "1"
                        }
                    ],
                    "geo": {
                        "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI",
                        "description": "Buenos Aires, Mexico"
                    },
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "name": "John",
                        "surname": "Johnson",
                        "email": "john@gmail.com",
                        "phone": "+1-541-754-3010",
                        "skype": "skype_login",
                        "position": "director",
                        "logo": null,
                        "company": {
                            "id": "1",
                            "name": "Coca-Cola"
                        },
                        "geo": {
                            "id": "3",
                            "formatted_address": "Buenos Aires, Nay., Mexico",
                            "description": "Buenos Aires, Mexico",
                            "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI"
                        },
                        "roles": [
                            {
                                "id": "1",
                                "name": "Admin",
                                "role": "ROLE_ADMIN"
                            }
                        ]                        
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

### Delete users [DELETE]

Can accept several users

+ Request (application/json)

        {
            "users": [
                {
                    "email": "john@gmail.com"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "name": "John",
                        "surname": "Johnson",
                        "email": "john@gmail.com",
                        "phone": "+1-541-754-3010",
                        "skype": "skype_login",
                        "position": "director",
                        "logo": null,
                        "company": {
                            "id": "1",
                            "name": "Coca-Cola"
                        },
                        "geo": {
                            "id": "3",
                            "formatted_address": "Buenos Aires, Nay., Mexico",
                            "description": "Buenos Aires, Mexico",
                            "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI"
                        },
                        "roles": [
                            {
                                "id": "1",
                                "name": "Admin",
                                "role": "ROLE_ADMIN"
                            }
                        ]                        
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }


### Update users [PUT]

The EMAIL field is required for each user. It is used to find user.
role is nor necessary, only one role can be set.
When changing password new_password field is required


+ Request (application/json)

        {
            "users": [
                {
                    "email": "john@gmail.com",
                    "name": "Maksim",
                    "password": "new_password",
                    "old_password": "old_password",
                    "roles": [
                        {
                            "id": "1"
                        }
                    ],
                    "geo": {
                        "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI",
                        "description": "Buenos Aires, Mexico"
                    }
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "name": "Maksim",
                        "surname": "Johnson",
                        "email": "john@gmail.com",
                        "phone": "+1-541-754-3010",
                        "skype": "skypelogin",
                        "position": "manager",
                        "logo": "https://s3.eu-centr.../pig.jpg",
                        "company": {
                            "id": "1",
                            "name": "Coca-Cola"
                        },
                        "geo": {
                            "id": "3",
                            "formatted_address": "Buenos Aires, Nay., Mexico",
                            "description": "Buenos Aires, Mexico",
                            "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI"
                        },
                        "roles": [
                            {
                                "id": "1",
                                "name": "Admin",
                                "role": "ROLE_ADMIN"
                            }
                        ]                           
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }



## User [/api/1.0/users/{email}]

### Retrieve user [GET]

+ Parameters
    + email (string, `ma@vcv.ru`) 

+ Response 200 (application/json)

            {
                "data": [
                    {
                        "name": "John",
                        "surname": "Johnson",
                        "email": "john@gmail.com",
                        "phone": "+1-541-754-3010",
                        "skype": "skypelogin",
                        "position": "manager",
                        "logo": "https://s3.eu-centr.../pig.jpg",
                        "company": {
                            "id": "1",
                            "name": "Coca-Cola"
                        },
                         "geo": {
                            "id": "3",
                            "formatted_address": "Buenos Aires, Nay., Mexico",
                            "description": "Buenos Aires, Mexico",
                            "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI"
                        },
                        "roles": [
                            {
                                "id": "2",
                                "name": "Admin",
                                "role": "ROLE_COMPANY_ADMIN"
                            }
                        ]                          
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

## User roles [/api/1.0/user-roles]

### Retrieve roles [GET]

+ Response 200 (application/json)

            {
                "data": [
                    {
                        "id": "2",
                        "name": "Admin",
                        "role": "ROLE_ADMIN_COMPANY"
                    },
                    {
                        "id": "3",
                        "name": "User",
                        "role": "ROLE_USER_COMPANY"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }


## Email activation [/api/1.0/user-emails-activation]

### Create new activation [POST]

+ Request (application/json)
    + Body

            {
                "users": [
                    {
                        "email": "my_current_email@mail.ru",
                        "new_email": "want_this_email@mail.ru"
                    }
                ]
            }
        
+ Response 200 (application/json)

            {
                "data": [
                    {
                        "id": "20",
                        "email": "want_this_email@mail.ru",
                        "activated": false
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }

### Confirm activation [PUT /api/1.0/user-emails-activation/{code}]
+ Parameters
    + code (string, `1092d2c65161f2545a27a00f356504043`) 
    
+ Request (application/json)

+ Response 200 (application/json)

            {
                "data": [
                    {
                        "id": "20",
                        "email": "want_this_email@mail.ru",
                        "activated": true
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }


## User logo [/api/1.0/users/{email}/logo]

+ Parameters
    + email (string, `ma@vcv.ru`) 

### Save logo [POST]

+ Request (multipart/form-data;boundary=---BOUNDARY)
    + Body

            ---BOUNDARY
            Content-Disposition: form-data; name="logo"; filename="8445314500f13.mp4"
            Content-Type: video/mp4

            data
            ---BOUNDARY--
        
+ Response 201 (application/json)

            {
                "data": [
                    {
                        "name": "John",
                        "surname": "Johnson",
                        "email": "john@gmail.com",
                        "phone": "+1-541-754-3010",
                        "skype": "skypelogin",
                        "position": "manager",
                        "logo": "https://s3.eu-centr.../pig.jpg",
                        "company": {
                            "id": "1",
                            "name": "Coca-Cola"
                        },
                        "geo": {
                            "id": "3",
                            "formatted_address": "Buenos Aires, Nay., Mexico",
                            "description": "Buenos Aires, Mexico",
                            "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI"
                        },
                        "roles": [
                            {
                                "id": "2",
                                "name": "Admin",
                                "role": "ROLE_COMPANY_ADMIN"
                            }
                        ]                          
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }



## Companies [/api/1.0/companies]

### Retrieve companies [GET]

Retrieve companies

+ Request
    + Headers

            Authorization: (Token)

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "name": "Coca-Cola",
                    "geo": {
                        "id": "3",
                        "formatted_address": "Buenos Aires, Nay., Mexico",
                        "description": "Buenos Aires, Mexico",
                        "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI"
                    },
                    "created_at": "2017-06-22T10:15:55+0300",
                    "logo": {
                        "source": "http://www.coca-cola.co.uk/content/dam/journey/gb/en/hidden/History/Heritage/596x334/the_logo_story_01122014_596x334.jpg"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }

            


## User companies [/api/1.0/user-companies]

### Retrieve companies [GET]

Retrieve company by user

+ Request
    + Headers

            Authorization: (Token)

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "name": "Coca-Cola",
                    "geo": {
                        "id": "3",
                        "formatted_address": "Buenos Aires, Nay., Mexico",
                        "description": "Buenos Aires, Mexico",
                        "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI"
                    },
                    "created_at": "2017-06-22T10:15:55+0300",
                    "logo": {
                        "source": "http://www.coca-cola.co.uk/content/dam/journey/gb/en/hidden/History/Heritage/596x334/the_logo_story_01122014_596x334.jpg"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }


### Update companies [PUT]

The ID field is required for each company.

+ Request (application/json)

        {
            "companies": [
                {
                    "id": "1",
                    "name": "Coca-Cola Company",
                    "geo": {
                        "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI",
                        "description": "Buenos Aires, Mexico"
                    }
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "1",
                        "name": "Coca-Cola Company",
                        "geo": {
                            "id": "3",
                            "formatted_address": "Buenos Aires, Nay., Mexico",
                            "description": "Buenos Aires, Mexico",
                            "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI"
                        },
                        "created_at": "2017-06-22T10:15:55+0300",
                        "logo": {
                            "source": "http://www.coca-cola.co.uk/content/dam/journey/gb/en/hidden/History/Heritage/596x334/the_logo_story_01122014_596x334.jpg"
                        }
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }




## Save logo for company [/api/1.0/user-companies/{id}/logo]

+ Parameters
    + id (string, `1`) ... Company id

### Save logo [POST]

+ Request (multipart/form-data;boundary=---BOUNDARY)
    + Body

            ---BOUNDARY
            Content-Disposition: form-data; name="logo"; filename="8445314500f13.mp4"
            Content-Type: video/mp4

            data
            ---BOUNDARY--
        
+ Response 201 (application/json)

        {
            "data": [
                {
                    "logo": "http://www.coca-cola.co.uk/content/dam/journey/gb/en/hidden/History/Heritage/596x334/the_logo_story_01122014_596x334.jpg"
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }




## Company users [/api/1.0/company-users]


### Retrieve users [GET]

+ Response 200 (application/json)

        {
            "data": [
                    {
                        "name": "John",
                        "surname": "Johnson",
                        "email": "john@gmail.com",
                        "phone": "+1-541-754-3010",
                        "skype": "skype_login",
                        "position": "director",
                        "logo": "http://...",
                        "company": {
                            "id": "1",
                            "name": "Coca-Cola"
                        },
                        "geo": {
                            "id": "3",
                            "formatted_address": "Buenos Aires, Nay., Mexico",
                            "description": "Buenos Aires, Mexico",
                            "place_id": "ChIJfaHK0Y5MJ4QR7DLfNrzqGrI"
                        },
                        "roles": [
                            {
                                "id": "1",
                                "name": "Admin",
                                "role": "ROLE_ADMIN"
                            }
                        ]                        
                    }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }

## Company personal managers [/api/1.0/company-personal-managers]


### Retrieve personal managers [GET]

+ Response 200 (application/json)


        {
            "data": [
                {
                    "id": "1",
                    "first_name": "John",
                    "second_name": null,
                    "last_name": "Johnson",
                    "email": "john@gmail.com",
                    "phone": "+1-541-754-3010"
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }



## Interview [/api/1.0/interviews/{token}]

### Retrieve interview [GET]

+ Parameters
    + token (string, `5966314500f31`) ... Interview token

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "token": "5966314500f31",
                    "vacancy": {
                        "id": "1",
                        "name": "Finance Director",
                        "video_link": "https://www.youtube.com/embed/6jiNS_4CEug"
                    },
                    "stage": {
                        "id": "videointerview",
                        "name": "Videointerview"
                    },
                    "candidate": {
                        "name": "John",
                        "surname": "Johnson",
                        "second_name": "",
                        "gender": "male"
                    },
                    "company": {
                        "id": "1",
                        "name": "Coca-Cola",
                        "logo": "http://www.coca-cola.co.uk/content/dam/journey/gb/en/hidden/History/Heritage/596x334/the_logo_story_01122014_596x334.jpg"
                    },
                    "meta": {
                        "active_process": "schlum"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }




## Interview refusals [/api/1.0/interviews/{token}/refusals]

### Retrieve interview refusals [GET]

+ Parameters
    + token (string, `5966314500f31`) ... Interview token

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "reason": "I want to come personally",
                    "description": null,
                    "priority": 1
                },
                {
                    "id": "2",
                    "reason": "Hardware problem",
                    "description": null,
                    "priority": 2
                },
                {
                    "id": "3",
                    "reason": "Other",
                    "description": "No, thanks",
                    "priority": 3
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 3
            }
        }



### Update interview refusals [PUT]

The ID field is required for each refusals. Only one refusal expected. Description field is optional.

+ Request (application/json)

        {
            "refusals": [
                {
                    "id": "3",
                    "description": "No, no, no!!!"
                }
            ]
        }

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": "3",
                        "reason": "Other",
                        "description": "No, no, no!!!",
                        "priority": 3
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 1
                }
            }




## Video interview for interview [/api/1.0/interviews/{token}/video_interviews]

+ Parameters
    + token (string, `5966314500f31`) ... Interview token

### Retrieve video interview [GET]

Question is completely filled if it is unlocked (answered)

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "is_active": true,
                    "vacancy": {
                        "id": "1"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "How are you?",
                            "is_required": true,
                            "answer_time": 120,
                            "preparation_time": 10,
                            "video": {
                                "id": "1",
                                "duration": 62,
                                "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                                "text": "I am fine, thanks"
                            },
                            "is_shown": true,
                            "is_skipped": false,
                            "is_available": true,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_en": false
                        },
                        {
                            "id": "2",
                            "preparation_time": 20,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": true,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_en": false
                        },
                        {
                            "id": "3",
                            "preparation_time": 10,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": false,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_en": false
                        },
                        {
                            "id": "4",
                            "preparation_time": null,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": false,
                            "retryable": true,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_en": false
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }





## End video interview for interview [/api/1.0/interviews/{token}/video_interviews/end]

+ Parameters
    + token (string, `5966314500f31`) ... Interview token

### End video interview [PUT]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "is_active": true,
                    "vacancy": {
                        "id": "1"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "How are you?",
                            "is_required": true,
                            "answer_time": 120,
                            "preparation_time": 10,
                            "video": {
                                "id": "1",
                                "duration": 62,
                                "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                                "text": null
                            },
                            "is_shown": true,
                            "is_skipped": false,
                            "is_available": true,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_en": false
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }




## Show question for video interview [/api/1.0/interviews/{token}/video_interview/questions/{question_id}/show]

+ Parameters
    + token (string, `5966314500f31`) ... Interview token
    + question_id (string, `1`) ... Question id

### Show question [PUT]
Tries to show question

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "name": "Question 1",
                    "body": "How are you?",
                    "is_required": true,
                    "answer_time": 120,
                    "preparation_time": 10,
                    "video": null,
                    "is_shown": true,
                    "is_skipped": false,
                    "is_available": true,
                    "retryable": false,
                    "is_video_answer_enabled": true,
                    "is_text_answer_enabled": false,
                    "is_en": false
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }
        
## Skip question for video interview [/api/1.0/interviews/{token}/video_interview/questions/{question_id}/skip]

+ Parameters
    + token (string, `5966314500f31`) ... Interview token
    + question_id (string, `1`) ... Question id

### Skip question [PUT]
Skip question. Available only for an optional questions (is_required: false)

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "name": "Question 1",
                    "body": "How are you?",
                    "is_required": false,
                    "answer_time": 120,
                    "preparation_time": 10,
                    "video": null,
                    "is_shown": true,
                    "is_skipped": true,
                    "is_available": true,
                    "retryable": false,
                    "is_video_answer_enabled": true,
                    "is_text_answer_enabled": false,
                    "is_en": false
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }


## Start video for video interview [/api/1.0/interviews/{token}/video_interview/questions/{question_id}/start-video]

+ Parameters
    + token (string, `5966314500f31`) ... Interview token
    + question_id (string, `1`) ... Question id

### Start video [POST]

+ Response 201 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "name": "Question 1",
                    "body": "How are you?",
                    "is_required": true,
                    "answer_time": 120,
                    "preparation_time": 10,
                    "video": null,
                    "is_shown": true,
                    "is_skipped": false,
                    "is_available": true,
                    "retryable": false,
                    "is_video_answer_enabled": true,
                    "is_text_answer_enabled": false,
                    "is_en": false
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }
        
        
        
        
## Save video for video interview [/api/1.0/interviews/{token}/video_interview/questions/{question_id}/save-video]

+ Parameters
    + token (string, `5966314500f31`) ... Interview token
    + question_id (string, `1`) ... Question id

### Save video [POST]

+ Request (multipart/form-data;boundary=---BOUNDARY)
    + Body

            ---BOUNDARY
            Content-Disposition: form-data; name="video[source]"; filename="8445314500f13.mp4"
            Content-Type: video/mp4

            data
            ---BOUNDARY--
            
            --BOUNDARY
            Content-Disposition: form-data; name="text"
        
            This is some text answer
            ---BOUNDARY--
        
+ Response 201 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "name": "Question 1",
                    "body": "How are you?",
                    "is_required": true,
                    "answer_time": 120,
                    "preparation_time": 10,
                    "video": {
                        "id": "1",
                        "duration": 62,
                        "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                        "text": null
                    },
                    "text": {
                        "id": 12,
                        "text": "This is some text answer"
                    },
                    "is_shown": true,
                    "retryable": false
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }
        



## Save test video for video interview [/api/1.0/interviews/{token}/video_interview/save-test_video]

+ Parameters
    + token (string, `5966314500f31`) ... Interview token

### Save video [POST]

+ Request (multipart/form-data;boundary=---BOUNDARY)
    + Body

            ---BOUNDARY
            Content-Disposition: form-data; name="video[source]"; filename="8445314500f13.mp4"
            Content-Type: video/mp4

            data
            ---BOUNDARY--
        
+ Response 201 (application/json)

        {
            "data": [
                {
                    "id": "3",
                    "duration": 12,
                    "source": "https://d3hhevgjvpym1b.cloudfront.net/vcv.ru/4c86/c66d/5711/74d8/47d7027ad01f7598.mp4?1497818484"
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }




## Test for interview [/api/1.0/interviews/{token}/tests]

+ Parameters
    + token (string, `5966314500f31`) ... Interview token

### Retrieve test [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "date_start": "2018-03-22T15:53:56+03:00",
                    "seconds_remaining": 1171,
                    "time_limit": 1800,fields t
                    "vacancy": {
                        "id": "1"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "Who was the first president of USA?",
                            "type": "choice",
                            "priority": 1000,
                            "answers": [
                                {
                                    "id": "1",
                                    "body": "George Washington",
                                    "is_choosen": false,
                                    "priority": 1000
                                },
                                {
                                    "id": "2",
                                    "body": "John Adams",
                                    "is_choosen": true,
                                    "priority": 2000
                                },
                                {
                                    "id": "3",
                                    "body": "Thomas Jefferson",
                                    "is_choosen": false,
                                    "priority": 3000
                                }
                            ]
                        },
                        {
                            "id": "2",
                            "name": "Question 2",
                            "body": "Who was the second president of USA?",
                            "type": "value",
                            "answers": []
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }





## End test for interview [/api/1.0/interviews/{token}/tests/end]

+ Parameters
    + token (string, `5966314500f31`) ... Interview token

### End test [PUT]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "vacancy": {
                        "id": "1"
                    },
                    "questions": [
                        {
                            "id": "1",
                            "name": "Question 1",
                            "body": "Who was the first president of USA?",
                            "type": "choice",
                            "answers": [
                                {
                                    "id": "1",
                                    "body": "George Washington",
                                    "is_choosen": false,
                                    "priority": 1000
                                },
                                {
                                    "id": "2",
                                    "body": "John Adams",
                                    "is_choosen": true,
                                    "priority": 2000
                                },
                                {
                                    "id": "3",
                                    "body": "Thomas Jefferson",
                                    "is_choosen": false,
                                    "priority": 3000
                                }
                            ]
                        },
                        {
                            "id": "2",
                            "name": "Question 2",
                            "body": "Who was the second president of USA?",
                            "type": "value",
                            "answers": [
                                {
                                    "id": "4",
                                    "body": "Nobody",
                                    "is_choosen": true,
                                    "priority": 1000
                                }
                            ]
                        }
                    ]
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2
            }
        }


## Answer questions for test [/api/1.0/interviews/{token}/tests/questions/{question_id}/answers]

+ Parameters
    + token (string, `5966314500f31`) ... Interview token
    + question_id (string, `1`) ... Question id

### Answer questions [PUT]
The ID field is required for each answer. If question type is "value" then BODY field is required.

+ Request (application/json)

        {
            "answers": [
                {
                    "id": "1",
                    "body": "George Washington"
                }
            ]
        }

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1",
                    "body": "George Washington"
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }





## Google autocomplete URL [/api/1.0/geo/autocomplete-url]

### Retrieve autocomplete url [GET]



+ Response 200 (application/json)

        {
            "data": [
                {
                     "url": "https://maps.googleapis.com/maps/api/place/autocomplete/json?sensor=false&types=(cities)&language=EN&key=AIzaSyB6JeYKA0OTk9Ov4q72ABraZYiQ_Zv7178&input={INPUT}"
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1
            }
        }




## Orders [/api/1.0/orders]

### Create new order [POST]

+ Request (application/json)

        {
            "orders": [
                {
                    "user": {
                        "name": "John",
                        "surname": "Johnson",
                        "phone": "+1-541-754-3010",
                        "email": "john.johnson@gmail.com",
                        "job_function": ""
                    },
                    "company": {
                        "name": "Coca-Cola"
                    },
                    "source": "site",
                    "desired_date": "2017-06-22T10:15:55+0300"
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "data": [
                    {
                        "user": {
                            "name": "John",
                            "surname": "Johnson",
                            "phone": "+1-541-754-3010",
                            "email": "john.johnson@gmail.com",
                            "job_function": ""
                        },
                        "company": {
                            "name": "Coca-Cola"
                        },
                        "source": "site",
                        "desired_date": "2017-06-22"
                    }
                ],
                "meta": {
                    "error": null,
                    "page": 1,
                    "total": 2
                }
            }

## Analytics [/api/1.0/analytics{?vacancy_id,created_after,created_before,user_email}]

+ Parameters
    + vacancy_id (required, string, `1`) ... Vacancy id
    + created_after (required, string, `2017-12-28`) ... Date from
    + created_before (required, string, `2017-12-29`) ... Date to
    + user_email (required, string, `john@gmail.com`) ... User email

### Response status count [GET /api/1.0/analytics/response-status-count{?vacancy_id,created_after,created_before,user_email}]

Количество откликов по статусам. Используется в виджете "Ожидают решения" (круговая диаграмма) и в виджете "Конверсия в сотрудника".

НУЖНО добавить фильтрацию статусов для "ожидают решения" и вынести в отдельный метод отношение кандидатов в статусе принят ко всем кандидатам (для виджета "Конверсия в сотрудника").

https://storage.www.wrike.com/filemeta/oriented/F49349880.A1741102

+ Response 200 (application/json)

        {
            "data": [
                {
                    "name": "New",
                    "color": null,
                    "priority": 10,
                    "count": 3,
                    "percent": 5.66,
                    "status": {
                        "id": 1,
                        "name": "New"
                    }
                },
                {
                    "name": "Awaiting decision",
                    "color": null,
                    "priority": 20,
                    "count": 0,
                    "percent": 0,
                    "status": {
                        "id": 2,
                        "name": "Awaiting decision"
                    }
                },
                {
                    "name": "Invited",
                    "color": null,
                    "priority": 30,
                    "count": 2,
                    "percent": 3.77,
                    "status": {
                        "id": 3,
                        "name": "Invited"
                    }
                },
                {
                    "name": "Refused",
                    "color": null,
                    "priority": 40,
                    "count": 2,
                    "percent": 3.77,
                    "status": {
                        "id": 4,
                        "name": "Refused"
                    }
                },
                {
                    "name": "Created",
                    "color": null,
                    "priority": 50,
                    "count": 0,
                    "percent": 0,
                    "status": {
                        "id": 10,
                        "name": "Created"
                    }
                },
                {
                    "name": "Invite sent",
                    "color": null,
                    "priority": 60,
                    "count": 0,
                    "percent": 0,
                    "status": {
                        "id": 11,
                        "name": "Invite sent"
                    }
                },
                {
                    "name": "Visited",
                    "color": null,
                    "priority": 70,
                    "count": 1,
                    "percent": 1.89,
                    "status": {
                        "id": 12,
                        "name": "Visited"
                    }
                },
                {
                    "name": "Accepted",
                    "color": null,
                    "priority": 80,
                    "count": 0,
                    "percent": 0,
                    "status": {
                        "id": 13,
                        "name": "Accepted"
                    }
                },
                {
                    "name": "Searchbot",
                    "color": null,
                    "priority": 90,
                    "count": 0,
                    "percent": 0,
                    "status": {
                        "id": 5,
                        "name": "Searchbot"
                    }
                },
                {
                    "name": "Reject",
                    "color": null,
                    "priority": 100,
                    "count": 0,
                    "percent": 0,
                    "status": {
                        "id": 37,
                        "name": "Reject"
                    }
                },
                {
                    "name": "Offer",
                    "color": null,
                    "priority": 110,
                    "count": 0,
                    "percent": 0,
                    "status": {
                        "id": 38,
                        "name": "Offer"
                    }
                },
                {
                    "name": "Hold",
                    "color": null,
                    "priority": 120,
                    "count": 0,
                    "percent": 0,
                    "status": {
                        "id": 39,
                        "name": "Hold"
                    }
                },
                {
                    "name": "Landing",
                    "color": null,
                    "priority": 130,
                    "count": 0,
                    "percent": 0,
                    "status": {
                        "id": 6,
                        "name": "Landing"
                    }
                },
                {
                    "name": "Test",
                    "color": null,
                    "priority": 140,
                    "count": 0,
                    "percent": 0,
                    "status": {
                        "id": 7,
                        "name": "Test"
                    }
                },
                {
                    "name": "Voicebot",
                    "color": null,
                    "priority": 150,
                    "count": 0,
                    "percent": 0,
                    "status": {
                        "id": 8,
                        "name": "Voicebot"
                    }
                },
                {
                    "name": "Videointerview",
                    "color": null,
                    "priority": 130,
                    "count": 45,
                    "percent": 84.91,
                    "status": {
                        "id": 9,
                        "name": "Videointerview"
                    }
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 5,
                "active_process": null
            }
        }




### Response status funnel [GET /api/1.0/analytics/response-status-funnel{?vacancy_id,created_after,created_before,user_email}]

Данные для отображения виджета воронки статусов "Воронка рекрутмента".

НУЖНО добавить фильтрацию для отображения в воронке не всех статусов.

https://storage.www.wrike.com/filemeta/oriented/F49450376.A1741102

+ Response 200 (application/json)

        {
            "data": [
                {
                    "name": "New",
                    "color": null,
                    "priority": 10,
                    "count": 0,
                    "percent": 0
                },
                {
                    "name": "Awaiting decision",
                    "color": null,
                    "priority": 20,
                    "count": 50,
                    "percent": 62.5
                },
                {
                    "name": "Refused",
                    "color": null,
                    "priority": 40,
                    "count": 0,
                    "percent": 0
                },
                {
                    "name": "Accepted",
                    "color": null,
                    "priority": 30,
                    "count": 28,
                    "percent": 35
                },
                {
                    "name": "Special",
                    "color": "FF00FF ",
                    "priority": 2000,
                    "count": 0,
                    "percent": 0
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 5,
                "active_process": null
            }
        }




### Conversion to employee [GET /api/1.0/analytics/response-status-employee-conversion{?vacancy_id,created_after,created_before,user_email}]

Конверсия в сотрудника

+ Response 200 (application/json)

        {
            "data": [
                {
                    "percent": 100
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }




### Response average recruitment duration table [GET /api/1.0/analytics/response-average-recruitment-duration-table{?vacancy_id,created_after,created_before,user_email}]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "columns": [
                        {
                            "name": "accepted_at",
                            "title": "Accepted",
                            "unit": null
                        },
                        {
                            "name": "average_duration",
                            "title": "Average duration",
                            "unit": null
                        }
                    ],
                    "rows": [
                        {
                            "cells": [
                                {
                                    "value": "2017-11-12"
                                },
                                {
                                    "value": 0
                                }
                            ]
                        },
                        {
                            "cells": [
                                {
                                    "value": "2017-12-12"
                                },
                                {
                                    "value": 0
                                }
                            ]
                        },
                        {
                            "cells": [
                                {
                                    "value": "2018-01-12"
                                },
                                {
                                    "value": 0
                                }
                            ]
                        },
                        {
                            "cells": [
                                {
                                    "value": "2018-02-12"
                                },
                                {
                                    "value": 0
                                }
                            ]
                        },
                        {
                            "cells": [
                                {
                                    "value": "2018-03-12"
                                },
                                {
                                    "value": 18.333333333333332
                                }
                            ]
                        }
                    ],
                    "count": 18
                }
            ],
            "meta": {
                "id": "5abbaa3c12702",
                "error": null,
                "page": 1,
                "total": 1
            }
        }




### Videointerview duration [GET /api/1.0/analytics/video_interview/duration{?vacancy_id,created_after,created_before,user_email}]

Общее время видео-интервью. Используется для виджета "Общее время интервью".

УТОЧНИТЬ разряд времени.

https://storage.www.wrike.com/filemeta/oriented/F49540352.A1741102

Duration unit: ms

+ Response 200 (application/json)

        {
            "data": [
                {
                    "duration": 173008980
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }



### Videointerview average duration [GET /api/1.0/analytics/video_interview/average-duration{?vacancy_id,created_after,created_before,user_email}]

Не используется.

https://storage.www.wrike.com/filemeta/oriented/F49548434.A1741102

Duration unit: ms

+ Response 200 (application/json)

        {
            "data": [
                {
                    "duration": 739354
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }




### Videointerview average question count [GET /api/1.0/analytics/video_interview/average-question-count{?vacancy_id,created_after,created_before,user_email}]

Не используется

https://storage.www.wrike.com/filemeta/oriented/F49548434.A1741102

+ Response 200 (application/json)

        {
            "data": [
                {
                    "count": 7
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }




### Vacancy count [GET /api/1.0/analytics/vacancy-count{?vacancy_id,created_after,created_before,user_email}]

Не используется.

+ Response 200 (application/json)

        {
            "data": [
                {
                    "count": 2
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }

### Vacancy response summary table [GET /api/1.0/analytics/vacancy-response-summary-table{?vacancy_id,created_after,created_before,user_email}]

https://storage.www.wrike.com/filemeta/oriented/F56197653.A1741102

+ Response 200 (application/json)

        {
          "data": [
            {
              "columns": [
                {
                  "name": "vacancy",
                  "title": "Vacancy",
                  "unit": null
                },
                {
                  "name": "response_count-total",
                  "title": "Candidates",
                  "unit": null
                },
                {
                  "name": "response_count-1",
                  "title": "New candidates",
                  "unit": null
                },
                {
                  "name": "response_count-9",
                  "title": "Videointerview",
                  "unit": null
                },
                {
                  "name": "response_count-3",
                  "title": "Invited",
                  "unit": null
                },
                {
                  "name": "recruitment-duration",
                  "title": "Recruitment duration",
                  "unit": "days"
                },
                {
                  "name": "conversion",
                  "title": "Conversion",
                  "unit": "%"
                },
                {
                  "name": "employees",
                  "title": "Employees",
                  "unit": null
                }
              ],
              "rows": [
                {
                  "cells": [
                    {
                      "value": "PHP Developer"
                    },
                    {
                      "value": 11
                    },
                    {
                      "value": 7
                    },
                    {
                      "value": 10
                    },
                    {
                      "value": 2
                    },
                    {
                      "value": 44
                    },
                    {
                      "value": 18.18
                    },
                    {
                      "value": [
                        {
                          "email": "test@vcv.me",
                          "name": "Admin ",
                          "surname": "VCV",
                          "logo": "https://s3.eu-central-1.amazonaws.com/ru.vcv.sber.static/new.vcv.ru/users/1/logo_1513682990117"
                        }
                      ]
                    }
                  ]
                }
              ],
              "count": 15
            }
          ],
          "meta": {
            "id": "5abb9c3084e24",
            "error": null,
            "page": 1,
            "total": 1
          }
        }



### Vacancy response summary table excel [GET /api/1.0/analytics/vacancy-response-summary-table-excel{?vacancy_id,created_after,created_before,user_email}]

https://storage.www.wrike.com/filemeta/oriented/F56197653.A1741102

+ Response 200 (application/json)

        {
            "data": [
                {
                    "url": "https://s3-eu-west-1.amazonaws.com/test.new.vcv.ru/127.0.0.1/analytics/1/report_93a41eeb460de455b034a20ac61cc077.xls"
                }
            ],
            "meta": {
                "id": "5abdecf3d7ba3",
                "error": null,
                "page": 0,
                "total": 0
            }
        }



### User response summary table [GET /api/1.0/analytics/user-response-summary-table{?vacancy_id,created_after,created_before,user_email}]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "columns": [
                        {
                            "name": "employee",
                            "index": 0,
                            "title": "Employee",
                            "unit": null
                        },
                        {
                            "name": "response_count-2",
                            "index": 1,
                            "title": "New candidates",
                            "unit": null
                        },
                        {
                            "name": "response_count-13",
                            "index": 2,
                            "title": "Accepted candidates",
                            "unit": null
                        },
                        {
                            "name": "response_count-3",
                            "index": 3,
                            "title": "Invited candidates",
                            "unit": null
                        },
                        {
                            "name": "average_recruitment_duration",
                            "index": 4,
                            "title": "Average recruitment duration",
                            "unit": "days"
                        }
                    ],
                    "rows": [
                        {
                            "cells": [
                                {
                                    "value": {
                                        "name": "John",
                                        "surname": "Johnson",
                                        "logo": null,
                                        "is_lead": false
                                    }
                                },
                                {
                                    "value": {
                                        "value": 30,
                                        "percent": 100
                                    }
                                },
                                {
                                    "value": {
                                        "value": 0,
                                        "percent": 0
                                    }
                                },
                                {
                                    "value": {
                                        "value": 9,
                                        "percent": 100
                                    }
                                },
                                {
                                    "value": {
                                        "value": 0,
                                        "percent": 0
                                    }
                                }
                            ]
                        },
                        {
                            "cells": [
                                {
                                    "value": {
                                        "name": "Brown",
                                        "surname": null,
                                        "logo": null,
                                        "is_lead": true
                                    }
                                },
                                {
                                    "value": {
                                        "value": 13,
                                        "percent": 43.33
                                    }
                                },
                                {
                                    "value": {
                                        "value": 2,
                                        "percent": 100
                                    }
                                },
                                {
                                    "value": {
                                        "value": 4,
                                        "percent": 44.44
                                    }
                                },
                                {
                                    "value": {
                                        "value": 46,
                                        "percent": 100
                                    }
                                }
                            ]
                        }
                    ],
                    "count": 5
                }
            ],
            "meta": {
                "id": "5afebef56ee21",
                "error": null,
                "page": 1,
                "total": 1
            }
        }


# Group Handbooks

## Countries [/api/1.0/handbook/countries]

### Retrieve countries [GET]

+ Response 200 (application/json)

            {
                "data": [
                    {
                        "code": "AU",
                        "title": "Австралия"
                    },
                    {
                        "code": "BY",
                        "title": "Беларусь"
                    },
                    {
                        "code": "CH",
                        "title": "Швейцария"
                    },
                    {
                        "code": "SE",
                        "title": "Швеция"
                    },
                    {
                        "code": "SJ",
                        "title": "Шпицберген и Ян Майен"
                    },
                    {
                        "code": "LK",
                        "title": "Шри-Ланка"
                    },
                    {
                        "code": "EC",
                        "title": "Эквадор"
                    },
                    {
                        "code": "GQ",
                        "title": "Экваториальная Гвинея"
                    },
                    {
                        "code": "AX",
                        "title": "Эландские острова"
                    },
                    {
                        "code": "SV",
                        "title": "Эль-Сальвадор"
                    },
                    {
                        "code": "ER",
                        "title": "Эритрея"
                    },
                    {
                        "code": "EE",
                        "title": "Эстония"
                    },
                    {
                        "code": "ET",
                        "title": "Эфиопия"
                    },
                    {
                        "code": "ZA",
                        "title": "Южная Африка"
                    },
                    {
                        "code": "SS",
                        "title": "Южный Судан"
                    },
                    {
                        "code": "JM",
                        "title": "Ямайка"
                    },
                    {
                        "code": "JP",
                        "title": "Япония"
                    }
                ],
                "meta": {
                    "id": "5afd2c387b199",
                    "error": null,
                    "page": 1,
                    "total": 242
                }
            }




# Group Special process: Schlum

### Create questionnaire [POST /api/1.0/spec-public/schlum/questionnaire]

+ Request (application/json)

        {
          "first_name": "Иван",
          "last_name": "Иванов",
          "second_name": "Иванович",
          "gender": "f",
          "birth_date": "01-05-1990",
          "citizenship": "РФ",
          "phone": "+79153894344",
          "email": "ss3@rr.ru",
          "university": "Уфимский Государственный Нефтяной Технический Университет",
          "speciality": "инженер",
          "average_score": "4",
          "graduation_year": "2011",
          "english_level": "средний",
          "ready_for_shift_method": true,
          "already_interviewed": true,
          "last_interview_date": "01-12-2017",
          "have_international_passport": true,
          "have_driver_license": true,
          "have_military_id": true,
          "have_relatives_in_company": false,
          "have_relatives_in_clients": false,
          "have_relatives_in_government": true,
          "cv_link": "https://hh.ru/my_cv.html",
          "cv_file_content": "file content"
        }

    

+ Response 200 (application/json)

        {
            "data": [
                {
                    "redirect_url": "urr to redirect on success, url to redirect when incorrect citizenship or university",
                    "first_name": "Иван",
                    "last_name": "Иванов",
                    "second_name": "Иванович",
                    "gender": "f",
                    "birth_date": "1990-05-01T00:00:00-07:00",
                    "citizenship": "РФ",
                    "phone": "+79153894344",
                    "email": "ss3@rr.ru",
                    "university": "Уфимский Государственный Нефтяной Технический Университет",
                    "speciality": "инженер",
                    "average_score": "4",
                    "graduation_year": "2011",
                    "english_level": "средний",
                    "ready_for_shift_method": true,
                    "already_interviewed": true,
                    "last_interview_date": "2017-12-01T00:00:00-08:00",
                    "have_international_passport": true,
                    "have_driver_license": true,
                    "have_military_id": true,
                    "have_relatives_in_company": false,
                    "have_relatives_in_clients": false,
                    "have_relatives_in_government": false
                }
            ],
            "meta": {
                "id": "5a7b200320dea",
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }
        
+ Response 400 (application/json)

        {
            "data": [
            ],
            "meta": {
                "id": "5a7b200320dea",
                "error": {
                    "message": "Данные не прошли валидацию",
                    "details": [
                        {
                            "phone" : "Пользователь с таким телефоном существует",
                        },
                        {
                            "email" : "Пользователь с таким email существует"
                        }
                        
                    ]
                },
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }
        
### Questionnaire university suggest [POST /api/1.0/spec-public/schlum/questionnaire/search-university{?query}]

+ Parameters
    + query (required, string, `моск`) ... University search string

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": 1,
                    "title": "Московский Государственный университет им.М.В.Ломоносова"
                },
                {
                    "id": 5,
                    "title": "Московский Физико-Технический Институт"
                },
                {
                    "id": 8,
                    "title": "Московский Государственный Технический Университет им.Н.Э.Баумана"
                },
                {
                    "id": 9,
                    "title": "Московский Энергетический Институт"
                },
                {
                    "id": 10,
                    "title": "Московский Авиационный Институт"
                },
                {
                    "id": 11,
                    "title": "Московский Институт Сталей и Сплавов"
                },
                {
                    "id": 26,
                    "title": "Московский государственный институт электронной техники"
                },
                {
                    "id": 27,
                    "title": "Московский Технический университет связи и информатики"
                },
                {
                    "id": 28,
                    "title": "Московский государственный технологический университет Станкин"
                },
                {
                    "id": 30,
                    "title": "Московский государственный университет геодезии и картографии"
                },
                {
                    "id": 31,
                    "title": "Московский Государственный Строительный Университет"
                },
                {
                    "id": 32,
                    "title": "Московский государственный технический университет гражданской авиации"
                },
                {
                    "id": 33,
                    "title": "Московский государственный индустриальный университет"
                },
                {
                    "id": 34,
                    "title": "Московский автомобильно-дорожный государственный технический университет"
                },
                {
                    "id": 35,
                    "title": "Московский государственный университет приборостроения и информатики"
                },
                {
                    "id": 36,
                    "title": "Московский технологический университет"
                },
                {
                    "id": 37,
                    "title": "Московский государственный университет прикладной биотехнологии"
                },
                {
                    "id": 38,
                    "title": "Московский Государственный Университет Приборостроения и Информатики"
                }
            ],
            "meta": {
                "id": "5a8abe3a7b39f",
                "error": null,
                "page": 1,
                "total": 18,
                "active_process": null
            }
        }
        
        
### Response test public [GET /api/1.0/spec-public/schlum/test/{token}]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1143",
                    "date_start": "2018-03-22T15:53:56+03:00",
                    "seconds_remaining": 1171,
                    "time_limit": 1800,
                    "vacancy": {
                        "id": "218"
                    },
                    "groups": [
                        {
                            "id": "7",
                            "title": "Математика",
                            "pass_rate": 8,
                            "questions": [
                                {
                                    "id": "14",
                                    "name": "",
                                    "body": " Вопрос 2",
                                    "type": "choice",
                                    "priority": 10000,
                                    "answers": [
                                        {
                                            "id": "43",
                                            "body": " ответ1",
                                            "is_chosen": true,
                                            "priority": 10000
                                        },
                                        {
                                            "id": "44",
                                            "body": "ответ2",
                                            "is_chosen": false,
                                            "priority": 10000
                                        },
                                        {
                                            "id": "45",
                                            "body": "ответ3",
                                            "is_chosen": false,
                                            "priority": 10000
                                        },
                                        {
                                            "id": "46",
                                            "body": "ответ4",
                                            "is_chosen": false,
                                            "priority": 10000
                                        }
                                    ],
                                    "picture": "picutre 2"
                                },
                                {
                                    "id": "15",
                                    "name": "",
                                    "body": " Вопрос 1",
                                    "type": "choice",
                                    "priority": 10000,
                                    "answers": [
                                        {
                                            "id": "47",
                                            "body": " Ответ 1",
                                            "is_chosen": false,
                                            "priority": 10000
                                        },
                                        {
                                            "id": "48",
                                            "body": "  Ответ 2",
                                            "is_chosen": false,
                                            "priority": 10000
                                        },
                                        {
                                            "id": "49",
                                            "body": "  Ответ 3",
                                            "is_chosen": false,
                                            "priority": 10000
                                        },
                                        {
                                            "id": "50",
                                            "body": "  Ответ 4",
                                            "is_chosen": false,
                                            "priority": 10000
                                        }
                                    ],
                                    "picture": "picture 1"
                                }
                            ]
                        },
                        {
                            "id": "6",
                            "title": "Логика",
                            "pass_rate": 6,
                            "questions": [
                                {
                                    "id": "13",
                                    "name": "",
                                    "body": " Вопрос на логику",
                                    "type": "choice",
                                    "priority": 10000,
                                    "answers": [
                                        {
                                            "id": "41",
                                            "body": " правильный",
                                            "is_chosen": false,
                                            "priority": 10000
                                        },
                                        {
                                            "id": "42",
                                            "body": " неправильный",
                                            "is_chosen": false,
                                            "priority": 10000
                                        }
                                    ],
                                    "picture": null
                                }
                            ]
                        }
                    ]
                }
            ],
            "meta": {
                "id": "5a8300b82f293",
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }
        
### Retrieve videointerview public [GET /api/1.0/spec-public/schlum/video_interviews/{token}]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "interview-4071",
                    "is_active": true,
                    "vacancy": {
                        "id": "218"
                    },
                    "questions": [
                        {
                            "id": "44065",
                            "is_required": false,
                            "preparation_time": 30,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": true,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_english": false
                        },
                        {
                            "id": "44066",
                            "is_required": false,
                            "preparation_time": 30,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": false,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_english": false
                        },
                        {
                            "id": "44067",
                            "is_required": false,
                            "preparation_time": 30,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": false,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_english": false
                        },
                        {
                            "id": "44068",
                            "is_required": false,
                            "preparation_time": 30,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": false,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_english": true
                        },
                        {
                            "id": "44069",
                            "is_required": false,
                            "preparation_time": 30,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": false,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_english": false
                        },
                        {
                            "id": "44070",
                            "is_required": false,
                            "preparation_time": 30,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": false,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_english": false
                        },
                        {
                            "id": "44071",
                            "is_required": false,
                            "preparation_time": 30,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": false,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_english": false
                        },
                        {
                            "id": "44072",
                            "is_required": false,
                            "preparation_time": 30,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": false,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_english": false
                        },
                        {
                            "id": "44073",
                            "is_required": false,
                            "preparation_time": 30,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": false,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_english": false
                        },
                        {
                            "id": "44074",
                            "is_required": false,
                            "preparation_time": 30,
                            "video": null,
                            "is_shown": false,
                            "is_skipped": false,
                            "is_available": false,
                            "retryable": false,
                            "is_video_answer_enabled": true,
                            "is_text_answer_enabled": false,
                            "is_english": false
                        }
                    ]
                }
            ],
            "meta": {
                "id": "5a8a90afafc5f",
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }

### Upload response picture public [POST /api/1.0/spec-public/schlum/create-response-picture/{token}]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": 1,
                    "url": "https://s3-eu-west-1.amazonaws.com/ ... /5a8ab01ed3893.png",
                    "preview": "https://s3-eu-west-1.amazonaws.com/ ... /preview_5a8ab01ed3893.png",
                    "created_at": "2018-02-19T03:08:15-08:00"
                }
            ],
            "meta": {
                "id": "5a8ab01ebec32",
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }
        
### Response questionnaire data [GET /api/1.0/spec-private/schlum/questionnaire/{response_id}]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "first_name": "Иван",
                    "last_name": "Иванов",
                    "second_name": "Иванович",
                    "gender": "f",
                    "birth_date": "1990-05-01T00:00:00-07:00",
                    "citizenship": "РФ",
                    "phone": "+79153894344",
                    "email": "ss3@rr.ru",
                    "university": "Уфимский Государственный Нефтяной Технический Университет",
                    "speciality": "инженер",
                    "average_score": "4",
                    "graduation_year": "2011",
                    "english_level": "средний",
                    "ready_for_shift_method": true,
                    "already_interviewed": true,
                    "last_interview_date": "2017-12-01T00:00:00-08:00",
                    "have_international_passport": true,
                    "have_driver_license": true,
                    "have_military_id": true,
                    "have_relatives_in_company": false,
                    "have_relatives_in_clients": false,
                    "have_relatives_in_government": false
                }
            ],
            "meta": {
                "id": "5a7b2046b27e3",
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }
        
        
### Retrieve test pictures [GET /api/1.0/spec-private/schlum/test-pictures/{response_id}]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": 1,
                    "url": "https://s3.eu-centr.../pig.jpg",
                    "preview": "https://s3.eu-centr.../preview.jpg",
                    "created_at": "2017-06-22T10:15:55+0300"
                },
                {
                    "id": 2,
                    "url": "https://s3.eu-centr.../pig.jpg",
                    "preview": "https://s3.eu-centr.../preview.jpg",
                    "created_at": "2017-06-22T10:15:56+0300"
                }
            ],
            "meta": {
                "error": null,
                "page": 1,
                "total": 2,
                "active_process": "schlum"
            }
        }
        
                
### Retrieve test questions [GET /api/1.0/spec-private/schlum/test-questions/{response_id}]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "1162",
                    "time_limit": 1800,
                    "date_start": "2018-02-21T03:56:41-08:00",
                    "date_end": "2018-02-21T04:26:41-08:00",
                    "vacancy": {
                        "id": "218"
                    },
                    "groups": [
                        {
                            "id": "13",
                            "title": "Математика",
                            "pass_rate": 8,
                            "is_passed": false,
                            "score": 1,
                            "questions": [
                                {
                                    "id": "33",
                                    "name": "",
                                    "body": " Вопрос 2",
                                    "type": "choice",
                                    "priority": 10000,
                                    "picture": "picutre 2",
                                    "answers": [
                                        {
                                            "id": "105",
                                            "body": " ответ1",
                                            "is_chosen": true,
                                            "priority": 10000,
                                            "is_valid": true
                                        },
                                        {
                                            "id": "106",
                                            "body": "ответ2",
                                            "is_chosen": false,
                                            "priority": 10000,
                                            "is_valid": false
                                        },
                                        {
                                            "id": "107",
                                            "body": "ответ3",
                                            "is_chosen": false,
                                            "priority": 10000,
                                            "is_valid": false
                                        },
                                        {
                                            "id": "108",
                                            "body": "ответ4",
                                            "is_chosen": false,
                                            "priority": 10000,
                                            "is_valid": false
                                        }
                                    ]
                                },
                                {
                                    "id": "34",
                                    "name": "",
                                    "body": " Вопрос 1",
                                    "type": "choice",
                                    "priority": 10000,
                                    "picture": "picture 1",
                                    "answers": [
                                        {
                                            "id": "109",
                                            "body": " Ответ 1",
                                            "is_chosen": false,
                                            "priority": 10000,
                                            "is_valid": true
                                        },
                                        {
                                            "id": "110",
                                            "body": "  Ответ 2",
                                            "is_chosen": false,
                                            "priority": 10000,
                                            "is_valid": false
                                        },
                                        {
                                            "id": "111",
                                            "body": "  Ответ 3",
                                            "is_chosen": false,
                                            "priority": 10000,
                                            "is_valid": false
                                        },
                                        {
                                            "id": "112",
                                            "body": "  Ответ 4",
                                            "is_chosen": true,
                                            "priority": 10000,
                                            "is_valid": false
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "id": "12",
                            "title": "Логика",
                            "pass_rate": 6,
                            "is_passed": false,
                            "score": 0,
                            "questions": [
                                {
                                    "id": "32",
                                    "name": "",
                                    "body": " Вопрос на логику",
                                    "type": "choice",
                                    "priority": 10000,
                                    "picture": null,
                                    "answers": [
                                        {
                                            "id": "103",
                                            "body": " правильный",
                                            "is_chosen": false,
                                            "priority": 10000,
                                            "is_valid": true
                                        },
                                        {
                                            "id": "104",
                                            "body": " неправильный",
                                            "is_chosen": false,
                                            "priority": 10000,
                                            "is_valid": false
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "meta": {
                "id": "5a8d6ab0ad9ca",
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }

### Retrieve groups data [GET /api/1.0/spec-private/schlum/groups]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": 13,
                    "title": "Математика",
                    "min_score": 1,
                    "max_score": 10,
                    "pass_rate": 7
                },
                {
                    "id": 24,
                    "title": "Логика",
                    "min_score": 1,
                    "max_score": 10,
                    "pass_rate": 6
                }
            ]
        }
        
### Retrieve responses [GET /api/1.0/spec-private/schlum/response{?sort_by}{?group}]

+ Parameters
    + sort_by (required, string, `Логика`) ... Additional options: Логика, Математика
    + group (optional, array) ... Filter by group score range. It is a 2 dimentional array. Where index is a group id, value is an array of filter range, example: ?group[13][]=7&group[13][]=10&group[24][]=6&group[24][]=10

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "4030",
                    "preview_link": null,
                    "created_at": "2018-02-13T06:27:41-0800",
                    "vacancy": {
                        "id": "218",
                        "name": "Spec"
                    },
                    "candidate": {
                        "name": "Иван",
                        "surname": "Иванов",
                        "second_name": "Иванович",
                        "gender": "female",
                        "phone": "+79451899234",
                        "email": "ss23as445@rr.ru"
                    },
                    "status": {
                        "id": "7",
                        "is_base": true,
                        "is_hidden": false,
                        "priority": 3000,
                        "color": null,
                        "has_responses": false,
                        "responses_count": 0,
                        "name": "Test"
                    },
                    "stage": {
                        "id": "4",
                        "name": "Test"
                    },
                    "star": {
                        "value": 3,
                        "created_at": "2018-02-14T06:34:49-0800"
                    },
                    "source": {
                        "id": "1",
                        "name": "Invite"
                    },
                    "questions": [],
                    "comments": [],
                    "voicebot": {
                        "id": "1143"
                    },
                    "meta": {
                        "active_process": "schlum"
                    },
                    "schlum_test_result": [
                        {
                            "score": 2,
                            "is_passed": false,
                            "title": "Логика"
                        },
                        {
                            "score": 3,
                            "is_passed": false,
                            "title": "Математика"
                        }
                    ]
                }
            ],
            "meta": {
                "id": "5a8a8cfb28e13",
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }
        
# Group Special process: Bat


## Personal account: categories [/api/1.0/spec-public/bat-personal-account/categories]

### Get data [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": 1,
                    "name": "Финансы"
                },
                {
                    "id": 2,
                    "name": "Отдел по работе с персоналом"
                },
                {
                    "id": 3,
                    "name": "Информационные технологии"
                },
                {
                    "id": 4,
                    "name": "Маркетинг"
                },
                {
                    "id": 5,
                    "name": "Департамент по правовым вопросам"
                },
                {
                    "id": 6,
                    "name": "Управление производством"
                }
            ],
            "meta": {
                "id": "5ad88e008e754",
                "error": null,
                "page": 1,
                "total": 6
            }
        }
        
## Personal account: vacancy descriptions public [/api/1.0/spec-public/bat-personal-account/vacancy-descriptions]

### Get data [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": 1,
                    "category": {
                        "id": 1,
                        "name": "Финансы"
                    },
                    "description_ru": "Описание",
                    "description_en": "Description",
                    "is_landing": true,
                    "vacancy": {
                        "id": 281,
                        "title": "Intern in Operations"
                    }
                }
            ],
            "meta": {
                "id": "5ad88e4c57955",
                "error": null,
                "page": 1,
                "total": 1
            }
        }
        
## Personal account: vacancy description [/api/1.0/spec-private/bat-personal-account/vacancy-description/{vacancyId}]

### Get data [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": 1,
                    "category": {
                        "id": 1,
                        "name": "Финансы"
                    },
                    "description_ru": "Иванович 321",
                    "description_en": "Ivanovich",
                    "is_landing": true,
                    "vacancy": {
                        "id": 281,
                        "title": "Intern in Operations"
                    }
                }
            ],
            "meta": {
                "id": "5ad88f119394f",
                "error": null,
                "page": 1,
                "total": 1
            }
        }

### Update vacancy description  [PUT]

+ Request (application/json)

        {
            "category": 1,
            "description_ru": "Иванович 321",
            "description_en": "Ivanovich",
            "is_landing": true
        }

+ Response 200 (application/json)

        {
          "data": [
            {
                    "id": 1,
                    "category": {
                        "id": 1,
                        "name": "Финансы"
                    },
                    "description_ru": "Иванович 321",
                    "description_en": "Ivanovich",
                    "is_landing": true,
                    "vacancy": {
                        "id": 281,
                        "title": "Intern in Operations"
                    }
                }
          ],
          "meta": {
            "id": "5ab8d43d4c315",
            "error": null,
            "page": 1,
            "total": 1
          }
        }

## Championship: business plan [/api/1.0/spec-public/bat-championship/business-plan/{token}]

+ Parameters
    + token (required, string, `oe2f4t51`) - token which identify team from competitions

### Get data [GET]

get data for current token (to check if team is already submit plan for current token)

+ Response 200 (application/json)

        {
            "data": [
                {
                   "video_link": "https://www.youtube.com/watch?v=d6CShHzTBJE"
                   "file": {
                   }
                }
            ],
            "meta": {
                "id": "5a7b200320dea",
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }
        
+ Response 404 (application/json)

        {
            "data": [],
            "meta": {
                "id": "5a7b200320dea",
                "error": {
                    "message": "",
                    "details": {
                        "token": "oe2f4t51" 
                    }
                },
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }

### Championship: business plan upload [POST]

+ Parameters
    + token (required, string, `oe2f4t51`) - token which identifi team from competitions
        
+ Request (multipart/form-data;boundary=---BOUNDARY)
    + Body

            ---BOUNDARY
            Content-Disposition: form-data; name="file"; filename="file.docx"
            Content-Type: application/msword
            
            
            ---BOUNDARY
            Content-Disposition: form-data; name="video_link"
            
            https://www.youtube.com/watch?v=d6CShHzTBJE
            ---BOUNDARY--

    

+ Response 200 (application/json)

        {
            "data": [
                {
                   "video_link": "https://www.youtube.com/watch?v=d6CShHzTBJE"
                   "file": {
                   }
                }
            ],
            "meta": {
                "id": "5a7b200320dea",
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }
        
+ Response 404 (application/json)

        {
            "data": [],
            "meta": {
                "id": "5a7b200320dea",
                "error": {
                    "message": "",
                    "details": {
                        "token": "oe2f4t51" 
                    }
                },
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }
        
## Championship: retrieve response [/api/1.0/spec-private/bat-championship/responses/{responseId}]

+ Parameters
    + responseId (required, numeric, `4089`) - response id

### Get data [GET]

get response data specified for bat team championship

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "4089",
                    "preview_link": null,
                    "created_at": "2018-03-02T03:07:03-08:00",
                    "vacancy": {
                        "id": "282",
                        "name": "championship"
                    },
                    "candidate": {
                        "name": "Иван",
                        "surname": "Иванов",
                        "second_name": null,
                        "gender": null,
                        "phone": "+79153872929",
                        "email": "ss@vcv.ai"
                    },
                    "status": {
                        "id": "10",
                        "is_base": false,
                        "is_hidden": false,
                        "priority": 100,
                        "color": null,
                        "on_top": false,
                        "has_responses": false,
                        "responses_count": 0,
                        "name": "Created"
                    },
                    "stage": {
                        "id": "6",
                        "name": "Finished"
                    },
                    "star": null,
                    "source": {
                        "id": "1",
                        "name": "Invite"
                    },
                    "questions": [],
                    "comments": [],
                    "voicebot": {
                        "id": "1173"
                    },
                    "bat-championship": {
                        "team_name": "Команда",
                        "file_url": null,
                        "video_link": null,
                        "members": [
                            {
                                "first_name": "Иван",
                                "last_name": "Иван",
                                "city": "Москва, Russia",
                                "university": "МФТИ",
                                "graduation_year": 2013,
                                "graduation_degree": "бакалавр",
                                "direction_of_study": "прикладная математика",
                                "english_level": "fluent",
                                "phone": "+79153872929",
                                "email": "ss@vcv.ai"
                            },
                            {
                                "first_name": "Петр",
                                "last_name": "Петр",
                                "city": "Moscow, Russia",
                                "university": "КФУ",
                                "graduation_year": 2013,
                                "graduation_degree": "123",
                                "direction_of_study": "321",
                                "english_level": "111",
                                "phone": "+79531235123",
                                "email": "sq@rr.ru"
                            }
                        ]
                    }
                }
            ],
            "meta": {
                "id": "5aafa5fe0783c",
                "error": null,
                "page": 1,
                "total": 1,
                "active_process": null
            }
        }
        
# Group Special process: Questionnaire Landing

## Get response landing data [/api/1.0/spec-private/questionnaire-landing/questionnaire/{responseId}]

+ Parameters
    + responseId (required, numeric, `4089`) - response id

### Get data [GET]

+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": 13,
                    "value": "4 text",
                    "question": {
                        "id": 6,
                        "type": "string",
                        "text": "When would you be available to start? Are you available for 3 months, for 35 hours a week, working from our offices in Waterloo?",
                        "is_required": true
                    }
                },
                {
                    "id": 14,
                    "value": "23 text ",
                    "question": {
                        "id": 2,
                        "type": "string",
                        "text": "CV Link",
                        "is_required": true
                    }
                },
                {
                    "id": 15,
                    "value": "1 text",
                    "question": {
                        "id": 3,
                        "type": "string",
                        "text": "How you would improve Sweatcoin app if you were a founder?",
                        "is_required": true
                    }
                },
                {
                    "id": 16,
                    "value": "2",
                    "question": {
                        "id": 4,
                        "type": "string",
                        "text": "In your view, what are the main risks for SweatCoins?",
                        "is_required": true
                    }
                },
                {
                    "id": 17,
                    "value": "3",
                    "question": {
                        "id": 5,
                        "type": "string",
                        "text": "How much of a role does physical exercise play in your life?",
                        "is_required": true
                    }
                },
                {
                    "id": 18,
                    "value": "3123",
                    "question": {
                        "id": 1,
                        "type": "string",
                        "text": "LinkedIn/Facebook profile link",
                        "is_required": true
                    }
                }
            ],
            "meta": {
                "id": "5abcb88063e2b",
                "error": null,
                "page": 1,
                "total": 6
            }
        }